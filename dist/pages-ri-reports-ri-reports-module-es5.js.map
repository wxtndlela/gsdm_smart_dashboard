{"version":3,"sources":["webpack:///src/app/pages/ri-reports/ri-reports.module.ts","webpack:///src/app/pages/ri-reports/ri-reports.component.ts","webpack:///src/app/pages/ri-reports/ri-reports.component.html","webpack:///src/app/pages/ri-reports/ri-reports.component.scss"],"names":["routes","path","component","RiReportsModule","declarations","imports","forChild","RiReportsComponent","modalController","db","db_m","alertCtrl","global","storage","location_services","loadingCtrl","search_array","Markers","SegmantData","uploadmedia","viewType","showMap","opentype","show_info","current_roadid","opencnt","self","progessStage","show_cond","show_cond_done","slideOpts","initialSlide","speed","slidesPerView","media_url","isbusy","console","log","event","SURFACE_TYPE","detail","value","length","loadSpecificDetails","input","includes","indexOf","search","Segments","subscribe","val","load_map","getAll","road_id","mid","mtype","murl","getSegment","data","create","cssClass","componentProps","title","segrec_id","roadid","segment","modal","present","SegmentMedia","SegmentMediaArray","getSegmentMedia","open_segmentrecorder","roadID","rectype","loadSegmentData","clear","latitude","Number","longitude","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","zoomControl","mapTypeControl","fullscreenControl","streetViewControl","streetViewControlOptions","position","ControlPosition","RIGHT_BOTTOM","zoomControlOptions","LEFT_BOTTOM","fullscreenControlOptions","BOTTOM_RIGHT","message","loading","addSegments","dismiss","setMapTypeId","addListener","mapsMouseEvent","location","latLng","coords","polygon","Polyline","strokeColor","strokeOpacity","strokeWeight","me","setMap","name","i","vci_array","cnt","push","String","vci","fin_coords","_res","res","replace","outputArray","item","split","parseFloat","poly_color","originalStrokeColor","get","setOptions","getAddress","streetName","road_len","route_seq","start_len","end_km","munic","start_km","loadSegmentMedia","osm_geocode_latlng","displayname","display_name","roundedNum","Math","round","showpercent","file","target","files","filepath","task","upload","uploadPercent","percentageChanges","snapshotChanges","pipe","ref","getDownloadURL","forEach","media_name","slice","addSegmentMediaNow","downloadURL","error","medianame","mediatype","mediaurl","now","Date","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","dt","segmentMedia","user_id","localStorage","getItem","media_type","addedondatetime","enabled","approved","selector","template"],"mappings":"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","file":"pages-ri-reports-ri-reports-module-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { RiReportsComponent } from \"./ri-reports.component\";\n\nconst routes: Routes = [{ path: \"\", component: RiReportsComponent }];\n\n@NgModule({\n  declarations: [RiReportsComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class RiReportsModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport * as map_style from \"../../../providers/map.styles\";\nimport { Segments, SegmentMedia } from \"../../../services/db\";\nimport { AddSegment, AddSegmentMediaModal } from \"../../../providers\";\nimport { InspectionComponent } from \"../../pages/inspection/inspection.component\";\nimport { SegmentRecorderComponent } from \"../../pages/segment-recorder/segment-recorder.component\";\nimport {\n  PopoverController,\n  ModalController,\n  AlertController,\n  LoadingController,\n  NavController,\n} from \"@ionic/angular\";\nimport { GeolocationService } from \"../../../services/geolocation.service\";\nimport { FirebaseStorage } from \"../../../services/firebase.storage.service\";\n//import { AngularFireStorage } from \"@angular/fire/storage\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport { GlobalSettings } from \"../../../services/global.service\";\n\n@Component({\n  selector: \"app-ri-reports\",\n  templateUrl: \"./ri-reports.component.html\",\n  styleUrls: [\"./ri-reports.component.scss\"],\n})\nexport class RiReportsComponent implements OnInit {\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\n\n  map: google.maps.Map;\n  Segments: any;\n  search_array: any[] = [];\n  SegmentMediaArray: any;\n  SegmentArray: any;\n  Markers: any[] = [];\n  SegmantData: any[] = [];\n  latitude: number;\n  longitude: number;\n  surburb: any;\n  postalCode: any;\n  city: any;\n  province: any;\n  myV: string;\n  uploadmedia: any = \"\";\n  viewType: any = \"\";\n  showMap: boolean = true;\n  //media_url: any;\n  opentype: any = \"\";\n  show_info: boolean = false;\n  current_roadid: any = \"\";\n\n  opencnt: any = 0;\n\n  // Create a reference to the class instance\n  self = this;\n  file: string | ArrayBuffer;\n\n  streetName: string;\n  roadID: string;\n  munic: string;\n  start_km: string;\n  end_km: string;\n  geometry: string[];\n  road_len: string;\n  route_seq: string;\n  start_len: string;\n  timerId: any;\n  displayname: any;\n  showpercent: any;\n  progessStage: any = \"\";\n  show_cond: boolean = false;\n  show_cond_done: boolean = false;\n\n  slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n    slidesPerView: 4,\n  };\n\n  media_url: string = \"\";\n  isbusy: boolean = false;\n\n  uploadPercent: any;\n  downloadURL: any;\n  segrec_id: any;\n\n  SURFACE_TYPE: any;\n  SURFACE_STATUS: any;\n\n  constructor(\n    private modalController: ModalController,\n    private db: Segments,\n    private db_m: SegmentMedia,\n    private alertCtrl: AlertController,\n    private global: GlobalSettings,\n    //private storage: FirebaseStorage,\n    private storage: AngularFireStorage,\n    private location_services: GeolocationService,\n    private loadingCtrl: LoadingController\n  ) {}\n\n  ngOnInit(): void {\n    console.log(\"Loading Reports Details\");\n    //this.load_map();\n    //this.loadDetails();\n  }\n\n  change_st(event) {\n    console.log(\"Surface Type Change\");\n    this.SURFACE_TYPE = event.detail.value;\n    if (this.SURFACE_TYPE.length > 0) {\n      this.show_cond = true;\n      //this.loadSpecificDetails(-2, -2);\n    } else {\n      this.show_cond = false;\n    }\n    //console.log(this.SURFACE_TYPE);\n    if (this.search_array.length > 0) {\n      this.search_array[0] = this.SURFACE_TYPE;\n      console.log(\"Search Array:\", this.search_array);\n\n      this.loadSpecificDetails(this.search_array);\n    }\n  }\n\n  change_sc(event) {\n    console.log(\"Surface Condition Change\");\n    this.show_cond_done = true;\n    let input = event.detail.value;\n    console.log(input);\n    this.search_array = [];\n    this.search_array[0] = this.SURFACE_TYPE;\n    if (input.includes(\"assessed\")) {\n      this.search_array[1] = \"assessed\";\n    }\n    if (input.includes(\"notassessed\")) {\n      this.search_array[1] = \"notassessed\";\n    }\n    if (input.includes(\"assessed\") && input.includes(\"notassessed\")) {\n      this.search_array[1] = \"skip\";\n    }\n    if (input.indexOf(\"assessed\") == -1 && input.indexOf(\"notassessed\") == -1) {\n      this.search_array[1] = \"skip\";\n    }\n\n    console.log(\"What to show:\", this.search_array[1]);\n\n    if (input.includes(\"vpoor\")) {\n      this.search_array[2] = true;\n    } else {\n      this.search_array[2] = false;\n    }\n    if (input.includes(\"poor\")) {\n      this.search_array[3] = true;\n    } else {\n      this.search_array[3] = false;\n    }\n    if (input.includes(\"fair\")) {\n      this.search_array[4] = true;\n    } else {\n      this.search_array[4] = false;\n    }\n    if (input.includes(\"good\")) {\n      this.search_array[5] = true;\n    } else {\n      this.search_array[5] = false;\n    }\n    if (input.includes(\"vgood\")) {\n      this.search_array[6] = true;\n    } else {\n      this.search_array[6] = false;\n    }\n\n    console.log(\"Search Array:\", this.search_array);\n\n    this.loadSpecificDetails(this.search_array);\n  }\n\n  loadSpecificDetails(search) {\n    this.db.Segments.subscribe((val) => {\n      this.Segments = val;\n      if (this.Segments.length > 0) {\n        this.load_map(false);\n        //console.log(\"Segments\", this.Segments[2]);\n        // this.latitude = Number(\"28.618020684007547\");\n        // this.longitude = Number(\"-26.651596892582404\");\n      } else {\n        this.load_map(true);\n      }\n    });\n    this.db.getAll();\n  }\n\n  // loadDetails() {\n  //   this.db.Segments.subscribe((val) => {\n  //     this.Segments = val;\n  //     if (this.Segments.length > 0) {\n  //       this.load_map();\n  //       //console.log(\"Segments\", this.Segments[2]);\n  //       // this.latitude = Number(\"28.618020684007547\");\n  //       // this.longitude = Number(\"-26.651596892582404\");\n  //     }\n  //   });\n  //   this.db.getAll();\n  // }\n\n  async loadSegmentData(road_id, mid, mtype, murl) {\n    (await this.db.getSegment(road_id)).subscribe(\n      async (data: AddSegment[]) => {\n        if (this.opencnt < 1) {\n          const modal = await this.modalController.create({\n            component: InspectionComponent,\n            cssClass: \"modal-full\",\n            componentProps: {\n              title: \"Open Inspection\",\n              segrec_id: this.segrec_id,\n              roadid: data[0][\"road_id\"],\n              mid: mid,\n              murl: murl,\n              mtype: mtype,\n              segment: data[0],\n            },\n          });\n\n          await modal.present();\n          this.opencnt += 1;\n        }\n      }\n    );\n  }\n\n  loadSegmentMedia(road_id) {\n    //This gets the segment related media\n    this.db_m.SegmentMedia.subscribe((val) => {\n      this.SegmentMediaArray = val;\n    });\n    this.db_m.getSegmentMedia(road_id);\n  }\n\n  ionViewDidEnter() {\n    //this.loadDetails();\n  }\n\n  getViewType(event: CustomEvent) {\n    this.viewType = event.detail.value;\n    if (this.viewType == \"recondevice\") {\n      this.open_segmentrecorder(this.roadID, \"recondevice\");\n    }\n    if (this.viewType == \"rec3d\") {\n      this.open_segmentrecorder(this.roadID, \"rec3d\");\n    }\n  }\n\n  getMediaType(event: CustomEvent) {\n    this.uploadmedia = event.detail.value;\n\n    if (this.uploadmedia == \"vid3d\" || this.uploadmedia == \"vid\") {\n      this.opentype = \"video/*\";\n    } else {\n      this.opentype = \"image/*\";\n    }\n    console.log(this.opentype);\n  }\n\n  async open_segmentrecorder(roadid, rectype) {\n    const modal = await this.modalController.create({\n      component: SegmentRecorderComponent,\n      cssClass: \"modal-full\",\n      componentProps: {\n        title: \"Open Recorder\",\n        roadid: roadid,\n        rectype: rectype,\n      },\n    });\n\n    await modal.present();\n  }\n\n  async open_inspection(roadid, mid, mtype, murl) {\n    this.opencnt = 0;\n    await this.loadSegmentData(roadid, mid, mtype, murl);\n  }\n\n  /**\n   * load_map\n   */\n  public async load_map(clear) {\n    this.latitude = Number(\"-26.651596892582404\");\n    this.longitude = Number(\"28.618020684007547\");\n    this.map = new google.maps.Map(\n      document.getElementById(\"map_canvas_segments\"),\n      {\n        center: { lat: this.latitude, lng: this.longitude },\n        zoom: 12,\n        zoomControl: true,\n        mapTypeControl: false,\n        fullscreenControl: true,\n        streetViewControl: true,\n\n        streetViewControlOptions: {\n          position: google.maps.ControlPosition.RIGHT_BOTTOM,\n        },\n\n        zoomControlOptions: {\n          position: google.maps.ControlPosition.LEFT_BOTTOM,\n        },\n\n        fullscreenControlOptions: {\n          position: google.maps.ControlPosition.BOTTOM_RIGHT,\n        },\n      }\n    );\n\n    const loading = await this.loadingCtrl.create({\n      message: \"Loading Segments ...\",\n    });\n\n    loading.present();\n\n    await this.addSegments(this.map, clear);\n\n    loading.dismiss();\n\n    this.map.setMapTypeId(\"roadmap\");\n    //this.getAddress();\n\n    // this.add_marker({ lat: this.latitude, lng: this.longitude });\n\n    this.map.addListener(\"click\", (mapsMouseEvent) => {\n      let location = {\n        lat: mapsMouseEvent.latLng.lat(),\n        lng: mapsMouseEvent.latLng.lng(),\n      };\n      // this.add_marker(location);\n    });\n  }\n\n  async setSegment(coords) {\n    // Create a new polygon with the specified coordinates\n    const polygon = new google.maps.Polyline({\n      path: coords,\n      strokeColor: \"rgb(0, 195, 255)\",\n      strokeOpacity: 0.8,\n      strokeWeight: 5,\n    });\n\n    let me = 0;\n\n    // Add the polygon to the map\n    polygon.setMap(this.map);\n  }\n\n  myFunction(name: string): void {}\n\n  async resetSegment(coords) {\n    // Create a new polygon with the specified coordinates\n    const polygon = new google.maps.Polyline({\n      path: coords,\n      strokeColor: \"rgb(122, 17, 163)\",\n      strokeOpacity: 0.8,\n      strokeWeight: 5,\n    });\n\n    let me = 0;\n\n    // Add the polygon to the map\n    polygon.setMap(this.map);\n  }\n\n  async addSegments(map, clear) {\n    for (let i = 0; i < this.Segments.length; i++) {\n      if (\n        //Display only selected surface type(s)\n        this.search_array[0].indexOf(this.Segments[i][\"surfacetype\"]) !== -1\n      ) {\n        //Select Assessed/Not Assessed\n        if (this.search_array[1] == \"assessed\") {\n          if (this.Segments[i][\"ASSESSED\"]) {\n            //Get selected Road Status/Condition\n            let vci_array = [];\n            let cnt = 0;\n\n            if (this.search_array[2]) {\n              //If Very Good Condition was selected\n              while (cnt < 30) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[3]) {\n              //If Good Condition was selected\n              cnt = 30;\n              while (cnt < 50) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[4]) {\n              //If Fair Condition was selected\n              cnt = 50;\n              while (cnt < 70) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[5]) {\n              //If Poor Condition was selected\n              cnt = 70;\n              while (cnt < 85) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[6]) {\n              //If Very Poor Condition was selected\n              cnt = 85;\n              while (cnt <= 100) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n\n            //console.log(\"Selected VCI:\", vci_array);\n\n            if (\n              vci_array.includes(this.Segments[i][\"VCI\"]) ||\n              vci_array.length == 0\n            ) {\n              let coords = this.Segments[i][\"geometry\"];\n              let vci = Number(this.Segments[i][\"VCI\"]);\n\n              let fin_coords = [];\n              for (let i = 0; i < coords.length; i++) {\n                let _res = [];\n                let res = \"lng:\" + coords[i];\n                res = res.replace(\",\", \",lat:\");\n\n                fin_coords.push(res);\n              }\n\n              const outputArray = fin_coords.map((item: string) => {\n                const [lng, lat] = item.split(\",\");\n                return {\n                  lng: parseFloat(lng.split(\":\")[1]),\n                  lat: parseFloat(lat.split(\":\")[1]),\n                };\n              });\n\n              //console.log(outputArray);\n              let poly_color = \"rgb(255,0,170)\";\n              if (vci >= 0 && vci < 30) {\n                poly_color = \"rgb(128,0,128)\";\n              }\n              if (vci >= 30 && vci < 50) {\n                poly_color = \"rgb(255,0,0)\";\n              }\n              if (vci >= 50 && vci < 70) {\n                poly_color = \"rgb(255,165,0)\";\n              }\n              if (vci >= 70 && vci < 85) {\n                poly_color = \"rgb(0,128,0)\";\n              }\n              if (vci >= 85 && vci <= 100) {\n                poly_color = \"rgb(0,0,255)\";\n              }\n\n              // Create a new polygon with the specified coordinates\n              const polygon = new google.maps.Polyline({\n                path: outputArray,\n                strokeColor: poly_color,\n                strokeOpacity: 0.8,\n                strokeWeight: 5,\n              });\n\n              let me = 0;\n\n              // Add the polygon to the map\n              polygon.setMap(this.map);\n              // Add a click event listener to the polygon\n\n              if (clear) {\n                polygon.setMap(null);\n              }\n\n              //clearTimeout(this.timerId);\n\n              // Save the original stroke color of the polygon\n              const originalStrokeColor = polygon.get(\"strokeColor\");\n\n              // Add a mouseover listener to change the stroke color to pink\n              polygon.addListener(\"mouseover\", async () => {\n                polygon.setOptions({ strokeColor: \"pink\" });\n                this.current_roadid = this.Segments[i][\"road_id\"];\n                this.show_info = true;\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n                this.getAddress();\n              });\n\n              // Add a mouseout listener to reset the stroke color to the original color\n              polygon.addListener(\"mouseout\", async () => {\n                polygon.setOptions({ strokeColor: originalStrokeColor });\n                this.show_info = false;\n              });\n\n              polygon.addListener(\"click\", async () => {\n                this.show_info = false;\n                this.current_roadid = this.uploadmedia = \"\";\n                this.viewType = \"\";\n                this.segrec_id = this.Segments[i][\"id\"];\n                this.streetName = this.Segments[i][\"street_name\"];\n                this.roadID = this.Segments[i][\"road_id\"];\n                this.road_len = this.Segments[i][\"road_len\"];\n                this.route_seq = this.Segments[i][\"route_seq\"];\n                this.start_len = this.Segments[i][\"st_length\"];\n                this.end_km = this.Segments[i][\"end_km\"];\n                this.munic = this.Segments[i][\"municipality\"];\n                this.start_km = this.Segments[i][\"start_km\"];\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n\n                this.showMap = false;\n                await this.loadSegmentMedia(this.roadID);\n                //this.setSegment(outputArray);\n                ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n                //clearTimeout(timerId);\n                //console.log(outputArray[0][\"lat\"]);\n              });\n            }\n          }\n        } else if (this.search_array[1] == \"notassessed\") {\n          if (this.Segments[i][\"ASSESSED\"] == false) {\n            //Get selected Road Status/Condition\n            let vci_array = [];\n            let cnt = 0;\n\n            if (this.search_array[2]) {\n              //If Very Good Condition was selected\n              while (cnt < 30) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[3]) {\n              //If Good Condition was selected\n              cnt = 30;\n              while (cnt < 50) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[4]) {\n              //If Fair Condition was selected\n              cnt = 50;\n              while (cnt < 70) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[5]) {\n              //If Poor Condition was selected\n              cnt = 70;\n              while (cnt < 85) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[6]) {\n              //If Very Poor Condition was selected\n              cnt = 85;\n              while (cnt <= 100) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n\n            //console.log(\"Selected VCI:\", vci_array);\n\n            if (\n              vci_array.includes(this.Segments[i][\"VCI\"]) ||\n              vci_array.length == 0\n            ) {\n              let coords = this.Segments[i][\"geometry\"];\n              let vci = Number(this.Segments[i][\"VCI\"]);\n\n              let fin_coords = [];\n              for (let i = 0; i < coords.length; i++) {\n                let _res = [];\n                let res = \"lng:\" + coords[i];\n                res = res.replace(\",\", \",lat:\");\n\n                fin_coords.push(res);\n              }\n\n              const outputArray = fin_coords.map((item: string) => {\n                const [lng, lat] = item.split(\",\");\n                return {\n                  lng: parseFloat(lng.split(\":\")[1]),\n                  lat: parseFloat(lat.split(\":\")[1]),\n                };\n              });\n\n              //console.log(outputArray);\n              let poly_color = \"rgb(255,0,170)\";\n              if (vci >= 0 && vci < 30) {\n                poly_color = \"rgb(128,0,128)\";\n              }\n              if (vci >= 30 && vci < 50) {\n                poly_color = \"rgb(255,0,0)\";\n              }\n              if (vci >= 50 && vci < 70) {\n                poly_color = \"rgb(255,165,0)\";\n              }\n              if (vci >= 70 && vci < 85) {\n                poly_color = \"rgb(0,128,0)\";\n              }\n              if (vci >= 85 && vci <= 100) {\n                poly_color = \"rgb(0,0,255)\";\n              }\n\n              // Create a new polygon with the specified coordinates\n              const polygon = new google.maps.Polyline({\n                path: outputArray,\n                strokeColor: poly_color,\n                strokeOpacity: 0.8,\n                strokeWeight: 5,\n              });\n\n              let me = 0;\n\n              // Add the polygon to the map\n              polygon.setMap(this.map);\n              // Add a click event listener to the polygon\n\n              if (clear) {\n                polygon.setMap(null);\n              }\n\n              //clearTimeout(this.timerId);\n\n              // Save the original stroke color of the polygon\n              const originalStrokeColor = polygon.get(\"strokeColor\");\n\n              // Add a mouseover listener to change the stroke color to pink\n              polygon.addListener(\"mouseover\", async () => {\n                polygon.setOptions({ strokeColor: \"pink\" });\n                this.current_roadid = this.Segments[i][\"road_id\"];\n                this.show_info = true;\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n                this.getAddress();\n              });\n\n              // Add a mouseout listener to reset the stroke color to the original color\n              polygon.addListener(\"mouseout\", async () => {\n                polygon.setOptions({ strokeColor: originalStrokeColor });\n                this.show_info = false;\n              });\n\n              polygon.addListener(\"click\", async () => {\n                this.show_info = false;\n                this.current_roadid = this.uploadmedia = \"\";\n                this.viewType = \"\";\n                this.segrec_id = this.Segments[i][\"id\"];\n                this.streetName = this.Segments[i][\"street_name\"];\n                this.roadID = this.Segments[i][\"road_id\"];\n                this.road_len = this.Segments[i][\"road_len\"];\n                this.route_seq = this.Segments[i][\"route_seq\"];\n                this.start_len = this.Segments[i][\"st_length\"];\n                this.end_km = this.Segments[i][\"end_km\"];\n                this.munic = this.Segments[i][\"municipality\"];\n                this.start_km = this.Segments[i][\"start_km\"];\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n\n                this.showMap = false;\n                await this.loadSegmentMedia(this.roadID);\n                //this.setSegment(outputArray);\n                ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n                //clearTimeout(timerId);\n                //console.log(outputArray[0][\"lat\"]);\n              });\n            }\n          }\n        } else {\n          //Get selected Road Status/Condition\n          let vci_array = [];\n          let cnt = 0;\n\n          if (this.search_array[2]) {\n            //If Very Good Condition was selected\n            while (cnt < 30) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[3]) {\n            //If Good Condition was selected\n            cnt = 30;\n            while (cnt < 50) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[4]) {\n            //If Fair Condition was selected\n            cnt = 50;\n            while (cnt < 70) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[5]) {\n            //If Poor Condition was selected\n            cnt = 70;\n            while (cnt < 85) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[6]) {\n            //If Very Poor Condition was selected\n            cnt = 85;\n            while (cnt <= 100) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n\n          //console.log(\"Selected VCI:\", vci_array);\n\n          if (\n            vci_array.includes(this.Segments[i][\"VCI\"]) ||\n            vci_array.length == 0\n          ) {\n            let coords = this.Segments[i][\"geometry\"];\n            let vci = Number(this.Segments[i][\"VCI\"]);\n\n            let fin_coords = [];\n            for (let i = 0; i < coords.length; i++) {\n              let _res = [];\n              let res = \"lng:\" + coords[i];\n              res = res.replace(\",\", \",lat:\");\n\n              fin_coords.push(res);\n            }\n\n            const outputArray = fin_coords.map((item: string) => {\n              const [lng, lat] = item.split(\",\");\n              return {\n                lng: parseFloat(lng.split(\":\")[1]),\n                lat: parseFloat(lat.split(\":\")[1]),\n              };\n            });\n\n            //console.log(outputArray);\n            let poly_color = \"rgb(255,0,170)\";\n            if (vci >= 0 && vci < 30) {\n              poly_color = \"rgb(128,0,128)\";\n            }\n            if (vci >= 30 && vci < 50) {\n              poly_color = \"rgb(255,0,0)\";\n            }\n            if (vci >= 50 && vci < 70) {\n              poly_color = \"rgb(255,165,0)\";\n            }\n            if (vci >= 70 && vci < 85) {\n              poly_color = \"rgb(0,128,0)\";\n            }\n            if (vci >= 85 && vci <= 100) {\n              poly_color = \"rgb(0,0,255)\";\n            }\n\n            // Create a new polygon with the specified coordinates\n            const polygon = new google.maps.Polyline({\n              path: outputArray,\n              strokeColor: poly_color,\n              strokeOpacity: 0.8,\n              strokeWeight: 5,\n            });\n\n            let me = 0;\n\n            // Add the polygon to the map\n            polygon.setMap(this.map);\n            // Add a click event listener to the polygon\n\n            if (clear) {\n              polygon.setMap(null);\n            }\n\n            //clearTimeout(this.timerId);\n\n            // Save the original stroke color of the polygon\n            const originalStrokeColor = polygon.get(\"strokeColor\");\n\n            // Add a mouseover listener to change the stroke color to pink\n            polygon.addListener(\"mouseover\", async () => {\n              polygon.setOptions({ strokeColor: \"pink\" });\n              this.current_roadid = this.Segments[i][\"road_id\"];\n              this.show_info = true;\n              this.latitude = outputArray[0][\"lat\"];\n              this.longitude = outputArray[0][\"lng\"];\n              this.getAddress();\n            });\n\n            // Add a mouseout listener to reset the stroke color to the original color\n            polygon.addListener(\"mouseout\", async () => {\n              polygon.setOptions({ strokeColor: originalStrokeColor });\n              this.show_info = false;\n            });\n\n            polygon.addListener(\"click\", async () => {\n              this.show_info = false;\n              this.current_roadid = this.uploadmedia = \"\";\n              this.viewType = \"\";\n              this.segrec_id = this.Segments[i][\"id\"];\n              this.streetName = this.Segments[i][\"street_name\"];\n              this.roadID = this.Segments[i][\"road_id\"];\n              this.road_len = this.Segments[i][\"road_len\"];\n              this.route_seq = this.Segments[i][\"route_seq\"];\n              this.start_len = this.Segments[i][\"st_length\"];\n              this.end_km = this.Segments[i][\"end_km\"];\n              this.munic = this.Segments[i][\"municipality\"];\n              this.start_km = this.Segments[i][\"start_km\"];\n              this.latitude = outputArray[0][\"lat\"];\n              this.longitude = outputArray[0][\"lng\"];\n\n              this.showMap = false;\n              await this.loadSegmentMedia(this.roadID);\n              //this.setSegment(outputArray);\n              ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n              //clearTimeout(timerId);\n              //console.log(outputArray[0][\"lat\"]);\n            });\n          }\n        }\n      }\n    }\n  }\n\n  async getAddress() {\n    let location = {\n      lat: this.latitude,\n      lng: this.longitude,\n    };\n    this.location_services.osm_geocode_latlng(location).subscribe((res) => {\n      console.log(res);\n\n      this.displayname = res.display_name;\n\n      // this.surburb = res.address.suburb;\n      // this.postalCode = res.address.postcode;\n      // this.city = res.address.city ? res.address.city : res.address.county;\n      // this.province = res.address.state;\n\n      // let name = `${res.address.road}, ${res.address.house_number}`;\n\n      //this.billboardForm.get('name').setValue(name)\n    });\n  }\n\n  getValue(val) {\n    const roundedNum = Math.round(val);\n    this.showpercent = \"Uploading...\" + roundedNum + \"%\";\n    return roundedNum;\n    //console.log(\"Progress: \" + roundedNum);\n  }\n\n  select_file(event) {\n    const file = event.target.files[0];\n    const filepath = \"road-inspection/\" + this.roadID + `/${file.name}`;\n    this.isbusy = true;\n    //this.progessStage = \"Uploading...\";\n    this.showpercent = \"Wait...\";\n\n    try {\n      const task = this.storage.upload(filepath, file);\n      // observe percentage changes\n      this.uploadPercent = task.percentageChanges();\n\n      // get notified when the download URL is available\n      task\n        .snapshotChanges()\n        .pipe(\n          finalize(async () => {\n            this.showpercent = \"Processing...\";\n            this.downloadURL = await this.storage\n              .ref(filepath)\n              .getDownloadURL()\n              .forEach(async (res) => {\n                console.log(res);\n                let media_name = String(file.name);\n                media_name = media_name.slice(0, media_name.indexOf(\".\"));\n                await this.addSegmentMediaNow(\n                  this.roadID,\n                  media_name,\n                  this.uploadmedia,\n                  res\n                );\n                this.isbusy = false;\n              });\n          })\n        )\n        .subscribe();\n    } catch (error) {\n      // handle the exception\n      console.error(error);\n      this.isbusy = false;\n    } finally {\n    }\n  }\n\n  public gotoMap(res) {\n    if (res) {\n      //this.loadDetails();\n    }\n    this.showMap = res;\n  }\n\n  async addSegmentMediaNow(roadid, medianame, mediatype, mediaurl) {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n    const dt = `${year}${month}${day}${hours}${minutes}${seconds}`;\n    let segmentMedia: AddSegmentMediaModal = {\n      user_id: localStorage.getItem(\"uuid\"),\n      road_id: roadid,\n      media_name: medianame,\n      media_type: mediatype,\n      media_url: mediaurl,\n      addedondatetime: dt,\n      enabled: true,\n      approved: true,\n    };\n    await this.db_m.create(segmentMedia);\n  }\n}\n","export default \"<ion-content #cont>\\n  <div\\n    class=\\\"container-fluid page-body-wrapper\\\"\\n    style=\\\"min-height: 100%; padding-top: 0%\\\"\\n  >\\n    <div class=\\\"main-panel-only w-100\\\">\\n      <div class=\\\"page-header\\\">\\n        <div *ngIf=\\\"show_cond_done\\\" class=\\\"col-md-6\\\">\\n          <h3 class=\\\"page-title\\\">Segments Found [{{ Segments.length }}]</h3>\\n        </div>\\n        <div *ngIf=\\\"show_info\\\" class=\\\"col-md-6 info\\\">\\n          Segment ID:&nbsp;&nbsp;{{ current_roadid }}\\n          <div>Address:&nbsp;&nbsp;{{ displayname }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"SURFACE_TYPE\\\">SURFACE TYPE </label>\\n        <ion-select\\n          (ionChange)=\\\"change_st($event)\\\"\\n          multiple=\\\"true\\\"\\n          class=\\\"form-control\\\"\\n          value=\\\"select\\\"\\n          okText=\\\"Okay\\\"\\n          cancelText=\\\"Dismiss\\\"\\n          id=\\\"SURFACE_TYPE\\\"\\n        >\\n          <ion-select-option value=\\\"block\\\">BLOCK</ion-select-option>\\n          <ion-select-option value=\\\"flexible\\\">FLEXIBLE</ion-select-option>\\n          <ion-select-option value=\\\"gravel\\\">GRAVEL</ion-select-option>\\n        </ion-select>\\n      </div>\\n\\n      <div *ngIf=\\\"show_cond\\\" class=\\\"form-group\\\">\\n        <label for=\\\"SURFACE_STATUS\\\">SURFACE CONDITION/STATUS </label>\\n        <ion-select\\n          (ionChange)=\\\"change_sc($event)\\\"\\n          class=\\\"form-control\\\"\\n          multiple=\\\"true\\\"\\n          value=\\\"select\\\"\\n          okText=\\\"Okay\\\"\\n          cancelText=\\\"Dismiss\\\"\\n          id=\\\"SURFACE_STATUS\\\"\\n        >\\n          <ion-select-option value=\\\"notassessed\\\"\\n            >NOT ASSESSED</ion-select-option\\n          >\\n          <ion-select-option value=\\\"assessed\\\">ASSESSED</ion-select-option>\\n          <ion-select-option value=\\\"vpoor\\\">VERY POOR</ion-select-option>\\n          <ion-select-option value=\\\"poor\\\">POOR</ion-select-option>\\n          <ion-select-option value=\\\"fair\\\">FAIR</ion-select-option>\\n          <ion-select-option value=\\\"good\\\">GOOD</ion-select-option>\\n          <ion-select-option value=\\\"vgood\\\">VERY GOOD</ion-select-option>\\n        </ion-select>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <!--MAP-->\\n        <div class=\\\"col-md-12 grid-margin\\\">\\n          <div class=\\\"card\\\" id=\\\"map_canvas_segments\\\" style=\\\"height: 85vh\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- main-panel ends -->\\n  </div>\\n  <!-- page-body-wrapper ends -->\\n</ion-content>\\n\";","export default \"ion-content {\\n  --ion-background-color: black;\\n}\\n\\n.text-color {\\n  color: white !important;\\n}\\n\\n.road-id {\\n  font-weight: bold;\\n  color: yellow;\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.slide-title {\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n  padding: 10px;\\n  width: 100%;\\n  font-size: 12px;\\n  z-index: 1;\\n  text-transform: uppercase;\\n}\\n\\nimg {\\n  border-left: 1px solid #ccc;\\n}\\n\\n.info {\\n  color: #fff !important;\\n  font-size: 12px;\\n}\\n\\nlabel {\\n  color: beige;\\n}\\n\\n.title {\\n  margin-bottom: 10px;\\n  color: yellow;\\n  font-size: 13px;\\n  font-weight: bold;\\n}\\n\\n.test {\\n  color: #ff00aa;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmktcmVwb3J0cy9yaS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQUE7QUFDRjs7QUFDQTtFQUNFLHVCQUFBO0FBRUY7O0FBQUE7RUFDRSxpQkFBQTtFQUNBLGFBQUE7QUFHRjs7QUFFQTtFQUNFLGFBQUE7QUFDRjs7QUFDQTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLFNBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0VBQ0Esb0NBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0FBRUY7O0FBQUE7RUFDRSwyQkFBQTtBQUdGOztBQURBO0VBQ0Usc0JBQUE7RUFDQSxlQUFBO0FBSUY7O0FBRkE7RUFDRSxZQUFBO0FBS0Y7O0FBSEE7RUFDRSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFNRjs7QUFKQTtFQUNFLGNBQUE7QUFPRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JpLXJlcG9ydHMvcmktcmVwb3J0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG4udGV4dC1jb2xvciB7XG4gIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xufVxuLnJvYWQtaWQge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IHllbGxvdztcbn1cbi8vIC5wcm9ncmVzcyB7XG4vLyAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4vLyB9XG4uaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uc2xpZGUtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgei1pbmRleDogMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbmltZyB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbn1cbi5pbmZvIHtcbiAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxubGFiZWwge1xuICBjb2xvcjogYmVpZ2U7XG59XG4udGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBjb2xvcjogeWVsbG93O1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnRlc3Qge1xuICBjb2xvcjogcmdiKDI1NSwgMCwgMTcwKTtcbn1cbiJdfQ== */\";"]}