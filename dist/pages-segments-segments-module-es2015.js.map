{"version":3,"sources":["./src/app/pages/segments/segments.component.html","./src/app/pages/segments/segments.module.ts","./src/app/pages/segments/segments.component.ts","./src/app/pages/segments/segments.component.scss"],"names":[],"mappings":"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","file":"pages-segments-segments-module-es2015.js","sourcesContent":["export default \"<ion-content #cont>\\n  <div class=\\\"download\\\" *ngIf=\\\"downloading == true\\\">\\n    Please wait while downloading ... {{ percDownload }}&nbsp;%\\n  </div>\\n  <div\\n    class=\\\"container-fluid page-body-wrapper\\\"\\n    style=\\\"min-height: 100%; padding-top: 0%\\\"\\n    *ngIf=\\\"downloading == false\\\"\\n  >\\n    <div class=\\\"main-panel-only w-100\\\">\\n      <div class=\\\"page-header\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <h3 class=\\\"page-title\\\">Segments Found [{{ _segments.length }}]</h3>\\n        </div>\\n\\n        <!-- <div *ngIf=\\\"show_info\\\" class=\\\"col-md-6 info\\\">\\n          Segment ID:&nbsp;&nbsp;{{ current_roadid }}\\n          <div>Address:&nbsp;&nbsp;{{ displayname }}</div>\\n        </div> -->\\n      </div>\\n      <div class=\\\"col-md-12\\\" *ngIf=\\\"show_list\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend bg-transparent\\\">\\n            <i class=\\\"input-group-text border-0 mdi mdi-magnify\\\"></i>\\n          </div>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control border-0\\\"\\n            placeholder=\\\"Find Link/Segment\\\"\\n            [(ngModel)]=\\\"searchQuery\\\"\\n          />\\n        </div>\\n\\n        <div class=\\\"list-group list-group-light space\\\">\\n          <a\\n            *ngFor=\\\"let item of filteredItems\\\"\\n            class=\\\"list-group-item list-group-item-action px-3 border-0\\\"\\n            aria-current=\\\"true\\\"\\n            (click)=\\\"itemClicked(item)\\\"\\n          >\\n            {{ item.municipality }}&nbsp;&nbsp;|&nbsp;&nbsp;{{\\n              item.road_id\\n            }}&nbsp;&nbsp;|&nbsp;&nbsp;{{ item.surfacetype }}</a\\n          >\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <!--MAP-->\\n        <!-- <div\\n          *ngIf=\\\"showMap && offlinemode == false\\\"\\n          class=\\\"col-md-12 grid-margin\\\"\\n        >\\n          <div class=\\\"card\\\" id=\\\"map_canvas_segments\\\" style=\\\"height: 85vh\\\"></div>\\n        </div> -->\\n        <div *ngIf=\\\"showMap\\\" class=\\\"iframe-container\\\">\\n          <div class=\\\"main-iframe\\\">\\n            <iframe\\n              [src]=\\\"mapSrc\\\"\\n              allow=\\\"microphone; camera; autoplay\\\"\\n              allowfullscreen\\n            ></iframe>\\n          </div>\\n        </div>\\n\\n        <!--SEGEMENT DETAILS-->\\n        <div *ngIf=\\\"!showMap\\\" class=\\\"col-md-12 grid-margin stretch-card\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <h4 class=\\\"card-title\\\">Physical Location:</h4>\\n              <p class=\\\"card-description\\\" *ngIf=\\\"roadID\\\">\\n                Coordinates :{{ latitude }}, {{ longitude }}\\n                <br />\\n                Address: <br /><span\\n                  style=\\\"font-size: 12px; font-style: italic\\\"\\n                  >{{ displayname }}</span\\n                >\\n              </p>\\n\\n              <p class=\\\"card-description\\\" *ngIf=\\\"!roadID\\\">\\n                Coordinates :--No Link Selected--\\n                <br />\\n                Address : --No Link Selected--\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Road / Link ID:</h4>\\n              <p class=\\\"card-description road-id\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ roadID }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Street Name:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"streetName\\\">{{ streetName }}</span>\\n                <span *ngIf=\\\"!streetName\\\">Name Not Found</span><br />\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Municipality:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ munic }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">VCI:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ VCI }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Start Length:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ start_len }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Start KMs:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ start_km }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">End KMs:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ end_km }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Road Length:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ road_len }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <h4 class=\\\"card-title\\\">Route Seq:</h4>\\n              <p class=\\\"card-description\\\">\\n                <span *ngIf=\\\"roadID\\\">{{ route_seq }}</span>\\n                <span *ngIf=\\\"!roadID\\\">--No Link Selected--</span>\\n              </p>\\n\\n              <p *ngIf=\\\"roadID\\\" class=\\\"card-title\\\">\\n                <label for=\\\"choose\\\" class=\\\"text-color\\\"\\n                  >Choose what you want to do</label\\n                >\\n                <ion-select\\n                  class=\\\"form-control\\\"\\n                  value=\\\"select\\\"\\n                  (ionChange)=\\\"getViewType($event)\\\"\\n                  okText=\\\"Okay\\\"\\n                  cancelText=\\\"Dismiss\\\"\\n                  id=\\\"choose\\\"\\n                >\\n                  <ion-select-option value=\\\"viewmedia\\\"\\n                    >Go to Assessment</ion-select-option\\n                  >\\n                  <ion-select-option\\n                    *ngIf=\\\"\\n                      (global.userRole == 'Administrator' ||\\n                        global.userRole == 'Road Inspection') &&\\n                      offlinemode == false\\n                    \\\"\\n                    value=\\\"uploadmedia\\\"\\n                    >Upload Inspection</ion-select-option\\n                  >\\n                  <ion-select-option\\n                    *ngIf=\\\"\\n                      (global.userRole == 'Administrator' ||\\n                        global.userRole == 'Road Inspection') &&\\n                      offlinemode == false\\n                    \\\"\\n                    value=\\\"recondevice\\\"\\n                    >Record (Device Cam)</ion-select-option\\n                  >\\n                  <ion-select-option\\n                    *ngIf=\\\"\\n                      (global.userRole == 'Administrator' ||\\n                        global.userRole == 'Road Inspection') &&\\n                      offlinemode == false\\n                    \\\"\\n                    value=\\\"rec3d\\\"\\n                    >Record (3D Cam)</ion-select-option\\n                  >\\n                </ion-select>\\n              </p>\\n\\n              <div *ngIf=\\\"viewType == 'uploadmedia'\\\" class=\\\"form-group\\\">\\n                <label for=\\\"uploadmedia\\\" class=\\\"text-color\\\"\\n                  >Upload Link Videos/Images</label\\n                >\\n\\n                <ion-select\\n                  class=\\\"form-control\\\"\\n                  value=\\\"select\\\"\\n                  (ionChange)=\\\"getMediaType($event)\\\"\\n                  okText=\\\"Okay\\\"\\n                  cancelText=\\\"Dismiss\\\"\\n                  id=\\\"uploadmedia\\\"\\n                >\\n                  <ion-select-option value=\\\"vid3d\\\">Video(3D)</ion-select-option>\\n                  <ion-select-option value=\\\"vid\\\"\\n                    >Video(Normal)</ion-select-option\\n                  >\\n                  <ion-select-option value=\\\"img\\\">Image</ion-select-option>\\n                </ion-select>\\n\\n                <input\\n                  *ngIf=\\\"uploadmedia !== '' && !isbusy\\\"\\n                  (change)=\\\"select_file($event)\\\"\\n                  [accept]=\\\"opentype\\\"\\n                  type=\\\"file\\\"\\n                  class=\\\"form-control\\\"\\n                  id=\\\"uploadvideo\\\"\\n                  placeholder=\\\"photo\\\"\\n                />\\n                <div class=\\\"hide\\\" *ngIf=\\\"uploadPercent | async as percent\\\">\\n                  Uploading: {{ getValue(percent) }}%\\n                  <ion-progress-bar [value]=\\\"percent\\\"></ion-progress-bar>\\n                </div>\\n\\n                <ion-button *ngIf=\\\"isbusy\\\" color=\\\"light\\\" expand=\\\"block\\\">{{\\n                  showpercent\\n                }}</ion-button>\\n              </div>\\n\\n              <div *ngIf=\\\"viewType == 'viewmedia'\\\">\\n                <ion-slides pager=\\\"true\\\" [options]=\\\"slideOpts\\\">\\n                  <ion-slide *ngFor=\\\"let item of SegmentMediaArray\\\">\\n                    <ion-title class=\\\"slide-title\\\">{{\\n                      item.media_name\\n                    }}</ion-title>\\n                    <!-- Add a title for the slide -->\\n                    <div\\n                      class=\\\"slide-content\\\"\\n                      (click)=\\\"\\n                        open_inspection(\\n                          item.road_id,\\n                          item.id,\\n                          item.media_type,\\n                          item.media_url\\n                        )\\n                      \\\"\\n                    >\\n                      <img\\n                        *ngIf=\\\"item.media_type == 'vid'\\\"\\n                        src=\\\"assets/images/vid.jpg\\\"\\n                        width=\\\"100%\\\"\\n                      />\\n                      <img\\n                        *ngIf=\\\"item.media_type == 'vid3d'\\\"\\n                        src=\\\"assets/images/vid3d.jpg\\\"\\n                        width=\\\"100%\\\"\\n                      />\\n                      <img\\n                        *ngIf=\\\"item.media_type == 'img'\\\"\\n                        src=\\\"assets/images/img.jpg\\\"\\n                        width=\\\"100%\\\"\\n                      />\\n                    </div>\\n                  </ion-slide>\\n                </ion-slides>\\n              </div>\\n              <div class=\\\"col-md-12\\\">\\n                <ion-grid>\\n                  <ion-row>\\n                    <ion-col>\\n                      <ion-button\\n                        *ngIf=\\\"!isbusy\\\"\\n                        expand=\\\"block\\\"\\n                        (click)=\\\"gotoMap(true)\\\"\\n                        >Go Back</ion-button\\n                      >\\n                    </ion-col>\\n                    <ion-col *ngIf=\\\"offlinemode == false\\\">\\n                      <ion-button\\n                        color=\\\"warning\\\"\\n                        *ngIf=\\\"!isbusy\\\"\\n                        expand=\\\"block\\\"\\n                        (click)=\\\"gotoDownload()\\\"\\n                        >Download Offline Media</ion-button\\n                      >\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-grid>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- main-panel ends -->\\n  </div>\\n\\n  <!-- page-body-wrapper ends -->\\n</ion-content>\\n\";","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { SegmentsComponent } from \"./segments.component\";\nimport { FormsModule } from \"@angular/forms\";\n\nconst routes: Routes = [{ path: \"\", component: SegmentsComponent }];\n\n@NgModule({\n  declarations: [SegmentsComponent],\n  imports: [CommonModule, FormsModule, RouterModule.forChild(routes)],\n})\nexport class SegmentsModule {}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n  HostListener,\n} from \"@angular/core\";\nimport * as map_style from \"../../../providers/map.styles\";\nimport { Segments, SegmentMedia } from \"../../../services/db\";\nimport { AddSegment, AddSegmentMediaModal } from \"../../../providers\";\nimport { InspectionComponent } from \"../../pages/inspection/inspection.component\";\nimport { SegmentRecorderComponent } from \"../../pages/segment-recorder/segment-recorder.component\";\nimport {\n  PopoverController,\n  ModalController,\n  AlertController,\n  LoadingController,\n  NavController,\n} from \"@ionic/angular\";\nimport { GeolocationService } from \"../../../services/geolocation.service\";\nimport { FirebaseStorage } from \"../../../services/firebase.storage.service\";\n//import { AngularFireStorage } from \"@angular/fire/storage\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport { GlobalSettings } from \"../../../services/global.service\";\nimport { Storage } from \"@ionic/storage-angular\";\nimport firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport { saveAs } from \"file-saver\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { interval } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-segments\",\n  templateUrl: \"./segments.component.html\",\n  styleUrls: [\"./segments.component.scss\"],\n})\nexport class SegmentsComponent implements OnInit {\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\n\n  //map: google.maps.Map;\n  //Segments: any;\n  SegmentMediaArray: any;\n  SegmentArray: any;\n  Markers: any[] = [];\n  SegmantData: any[] = [];\n  latitude: number;\n  longitude: number;\n  surburb: any;\n  postalCode: any;\n  city: any;\n  province: any;\n  myV: string;\n  uploadmedia: any = \"\";\n  viewType: any = \"\";\n  showMap: boolean = true;\n  offlinemode: boolean = false;\n  downloading: boolean = false;\n  offlinemedia: any[] = [];\n  totalIncr: number = 0;\n  percDownload: number = 0;\n  host: any = \"localhost\";\n\n  //media_url: any;\n  opentype: any = \"\";\n  show_info: boolean = false;\n  show_list: boolean = false;\n  SegmentMediaOnline: boolean = false;\n  current_roadid: any = \"\";\n  isInternetAvailable: boolean;\n\n  opencnt: any = 0;\n\n  // Create a reference to the class instance\n  self = this;\n  file: string | ArrayBuffer;\n\n  streetName: string;\n  roadID: string;\n  munic: string;\n  start_km: string;\n  end_km: string;\n  VCI: string;\n  geometry: string[];\n  road_len: string;\n  route_seq: string;\n  start_len: string;\n  timerId: any;\n  displayname: any;\n  showpercent: any;\n  progessStage: any = \"\";\n  _segments: any;\n  searchQuery: string = \"\";\n\n  slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n    slidesPerView: 4,\n  };\n\n  media_url: string = \"\";\n  isbusy: boolean = false;\n\n  uploadPercent: any;\n  downloadURL: any;\n  segrec_id: any;\n  mapSrc: SafeResourceUrl;\n\n  constructor(\n    private modalController: ModalController,\n    private db: Segments,\n    private db_m: SegmentMedia,\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private sanitizer: DomSanitizer,\n    private alertCtrl: AlertController,\n    private global: GlobalSettings,\n    //private storage: FirebaseStorage,\n    public Offline: Storage,\n    private storage: AngularFireStorage,\n    private location_services: GeolocationService,\n    private loadingCtrl: LoadingController\n  ) {\n    this.checkInternetAvailability();\n\n    setInterval(() => {\n      this.checkInternetAvailability();\n    }, 2000);\n  }\n\n  ngOnInit(): void {\n    this.attachMessageListener();\n    console.log(\"Loading Segment Details\");\n    //this.load_map();\n    this.loadDetails();\n\n    setTimeout(() => {\n      if (this.isInternetAvailable == false) {\n        //Offline\n        //console.log(\"--No Internet--\");\n        this.global.showSync = false;\n        this.Offline.get(\"DATA\").then((_data) => {\n          this._segments = _data;\n          this.show_list = false;\n          this.offlinemode = true;\n        });\n      } else {\n        //Online\n        this.global.showSync = true;\n        this.Offline.set(\"DATA\", this._segments);\n        this.offlinemode = false;\n\n        //console.log(this._segments[0]);\n      }\n    }, 5000);\n  }\n\n  ngOnDestroy() {\n    // Remove the message event listener when the component is destroyed\n\n    this.detachMessageListener();\n  }\n\n  attachMessageListener() {\n    // Add event listener to listen for messages from the iframe\n\n    window.addEventListener(\"message\", this.handleMessageEvent);\n  }\n\n  detachMessageListener() {\n    // Remove event listener when the component is destroyed\n\n    window.removeEventListener(\"message\", this.handleMessageEvent);\n  }\n\n  @HostListener(\"window:message\", [\"$event\"])\n  handleMessageEvent(event: MessageEvent) {\n    // Ensure the message is coming from a trusted source\n\n    // You can check event.origin and validate it against your expected iframe origin\n\n    // Handle the received message\n\n    const message = event.data;\n    if (message.type === \"clickEvent\") {\n      setTimeout(async () => {\n        const roadID = message.data.roadid;\n        // Perform actions based on the received click data\n        console.log(\"Click event received from Map:\", roadID);\n        //this.mapClickedSegment(roadID);\n        const foundObject = await this._segments.find(\n          (obj) => obj.road_id === roadID\n        );\n        //console.log(\"SEG:\", foundObject.geometry[0]);\n        let coords = foundObject.geometry;\n        let fin_coords = [];\n        for (let i = 0; i < coords.length; i++) {\n          let _res = [];\n          let res = \"lng:\" + coords[i];\n          res = res.replace(\",\", \",lat:\");\n\n          fin_coords.push(res);\n        }\n\n        const outputArray = fin_coords.map((item: string) => {\n          const [lng, lat] = item.split(\",\");\n          return {\n            lng: parseFloat(lng.split(\":\")[1]),\n            lat: parseFloat(lat.split(\":\")[1]),\n          };\n        });\n        this.show_info = false;\n\n        this.current_roadid = this.uploadmedia = \"\";\n        this.viewType = \"\";\n        this.segrec_id = foundObject.id;\n        this.streetName = foundObject.street_name;\n        this.roadID = foundObject.road_id;\n        this.VCI = foundObject.VCI;\n        this.road_len = foundObject.road_len;\n        this.route_seq = foundObject.route_seq;\n        this.start_len = foundObject.st_length;\n        this.end_km = foundObject.end_km;\n        this.munic = foundObject.municipality;\n        this.start_km = foundObject.start_km;\n        this.latitude = outputArray[0][\"lat\"];\n        this.longitude = outputArray[0][\"lng\"];\n\n        this.showMap = false;\n        await this.loadSegmentMedia(this.roadID);\n        await this.getMediaForOffline(this.roadID);\n      }, 1000);\n    }\n  }\n\n  // async mapClickedSegment(_segmentid) {\n  //   const foundObject = await this._segments.find(\n  //     (obj) => obj.road_id === _segmentid\n  //   );\n  //   //console.log(\"SEG:\", foundObject.geometry[0]);\n  //   let coords = foundObject.geometry;\n  //   let fin_coords = [];\n  //   for (let i = 0; i < coords.length; i++) {\n  //     let _res = [];\n  //     let res = \"lng:\" + coords[i];\n  //     res = res.replace(\",\", \",lat:\");\n\n  //     fin_coords.push(res);\n  //   }\n\n  //   const outputArray = fin_coords.map((item: string) => {\n  //     const [lng, lat] = item.split(\",\");\n  //     return {\n  //       lng: parseFloat(lng.split(\":\")[1]),\n  //       lat: parseFloat(lat.split(\":\")[1]),\n  //     };\n  //   });\n  //   this.show_info = false;\n\n  //   this.current_roadid = this.uploadmedia = \"\";\n  //   this.viewType = \"\";\n  //   this.segrec_id = foundObject.id;\n  //   this.streetName = foundObject.street_name;\n  //   this.roadID = foundObject.road_id;\n  //   this.VCI = foundObject.VCI;\n  //   this.road_len = foundObject.road_len;\n  //   this.route_seq = foundObject.route_seq;\n  //   this.start_len = foundObject.st_length;\n  //   this.end_km = foundObject.end_km;\n  //   this.munic = foundObject.municipality;\n  //   this.start_km = foundObject.start_km;\n  //   this.latitude = outputArray[0][\"lat\"];\n  //   this.longitude = outputArray[0][\"lng\"];\n\n  //   this.showMap = false;\n  //   await this.loadSegmentMedia(this.roadID);\n  //   await this.getMediaForOffline(this.roadID);\n  // }\n\n  loadDetails() {\n    this.db.Segments.subscribe((val) => {\n      this._segments = val;\n      //console.log(val[0]);\n\n      // if (this._segments.length > 0) {\n      this.mapSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\n        \"http://\" + this.host + \":3000/map\"\n      );\n      //this.load_map();\n      //}\n    });\n    this.db.getAll();\n  }\n\n  async downloadFileFromStorage(downloadURL: string, fileName: string) {\n    try {\n      // Fetch the file and create a blob\n      const response = await fetch(downloadURL);\n      const blob = await response.blob();\n\n      // Save the blob as a file using the FileSaver library\n      saveAs(blob, fileName);\n      console.log(\"Downloaded: \", fileName);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n    }\n  }\n\n  async gotoDownload_script(\n    _url: any,\n    _fileName: string,\n    total_length: number\n  ) {\n    const apiUrl = \"http://localhost:3000/run-script\";\n    // Replace with your server's URL\n\n    const requestData = { url: _url, fname: _fileName, road_id: this.roadID };\n\n    // Customize the data you want to send to the server\n\n    this.http.post(apiUrl, requestData).subscribe(\n      (res) => {\n        if (res) {\n          this.totalIncr += 1;\n\n          //Store local file paths to ARRAY\n          this.offlinemedia.push(\n            \"./assets/media/\" + this.roadID + \"/\" + _fileName\n          );\n          if (this.totalIncr >= total_length) {\n            this.downloading = false;\n            //Store file path ARRAY to offline storage\n            this.Offline.set(this.roadID, this.offlinemedia);\n            //console.log(\"Media:\", this.offlinemedia);\n          } else {\n            this.downloading = true;\n          }\n        }\n        this.percDownload = Number(\n          ((this.totalIncr / total_length) * 100).toFixed(1)\n        );\n\n        // Handle any further actions or responses from the server\n      },\n\n      (error) => {\n        console.error(\"Error executing Download script:\", error);\n\n        // Handle the error condition if necessary\n      }\n    );\n    return 0;\n  }\n\n  async gotoDownload() {\n    this.downloading = true;\n    this.totalIncr = 0;\n\n    let len = this.SegmentMediaArray.length;\n    let cnt = 0;\n    this.offlinemedia = [];\n\n    while (cnt < len) {\n      let type_ = \"\";\n\n      if (this.SegmentMediaArray[cnt].media_url.includes(\".png\")) {\n        type_ = \".png\";\n      } else if (this.SegmentMediaArray[cnt].media_url.includes(\".jpeg\")) {\n        type_ = \".jpeg\";\n      } else if (this.SegmentMediaArray[cnt].media_url.includes(\".jpg\")) {\n        type_ = \".jpg\";\n      } else if (this.SegmentMediaArray[cnt].media_url.includes(\".mp4\")) {\n        type_ = \".mp4\";\n      }\n\n      await this.gotoDownload_script(\n        this.SegmentMediaArray[cnt].media_url,\n        this.SegmentMediaArray[cnt].media_name + type_,\n        len\n      );\n\n      cnt += 1;\n    }\n  }\n\n  async getMediaForOffline(roadID) {\n    setTimeout(() => {\n      //console.log(\"OFF:\", this.SegmentMediaOnline);\n      if (this.isInternetAvailable == false) {\n        //Offline\n        //console.log(\"--No Internet--\");\n\n        this.Offline.get(\"M-\" + roadID).then((_data) => {\n          this.SegmentMediaArray = _data;\n          this.offlinemode = true;\n\n          let _tmpMediaDownloaded = [];\n\n          //Retrieve a list of media links that were downloaded\n          this.Offline.get(roadID).then((ret) => {\n            _tmpMediaDownloaded = ret;\n            console.log(_tmpMediaDownloaded);\n            let cnt = 0;\n            let len = _tmpMediaDownloaded.length;\n            while (cnt < len) {\n              let _replace = \"./assets/media/\" + roadID + \"/\";\n              let _fname = String(\n                _tmpMediaDownloaded[cnt].replace(_replace, \"\")\n              );\n              _fname = _fname.substring(0, _fname.length - 4);\n\n              //Find matching record by media_name\n              const foundObject = this.SegmentMediaArray.find(\n                (obj) => obj.media_name === _fname\n              );\n              if (foundObject) {\n                //If found, then replace cloud url with local\n                foundObject.media_url = _tmpMediaDownloaded[cnt];\n              }\n\n              cnt += 1;\n            }\n          });\n        });\n      } else {\n        //Online\n\n        this.Offline.set(\"M-\" + roadID, this.SegmentMediaArray);\n        this.offlinemode = false;\n        //console.log(\"MEDIA:\", this.SegmentMediaArray);\n\n        //Assume Offline\n      }\n    }, 5000);\n  }\n\n  async loadSegmentData(road_id, mid, mtype, murl) {\n    (await this.db.getSegment(road_id)).subscribe(\n      async (data: AddSegment[]) => {\n        if (this.opencnt < 1) {\n          if (data.length > 0) {\n            //We are online\n            const modal = await this.modalController.create({\n              component: InspectionComponent,\n              cssClass: \"modal-full\",\n              componentProps: {\n                title: \"Open Inspection\",\n                segrec_id: this.segrec_id,\n                roadid: data[0][\"road_id\"],\n                mid: mid,\n                murl: murl,\n                offline: false,\n                mtype: mtype,\n                segment: data[0],\n              },\n            });\n\n            await modal.present();\n          } else {\n            //Offline /\n            //Find matching record by road_id\n            const foundObject = this._segments.find(\n              (obj) => obj.road_id === road_id\n            );\n            if (foundObject) {\n              const modal = await this.modalController.create({\n                component: InspectionComponent,\n                cssClass: \"modal-full\",\n                componentProps: {\n                  title: \"Open Inspection\",\n                  segrec_id: this.segrec_id,\n                  roadid: foundObject.road_id,\n                  mid: murl, //Insert real media URL if we are working offline\n                  murl: \"\",\n                  offline: true,\n                  mtype: mtype,\n                  segment: foundObject,\n                },\n              });\n\n              await modal.present();\n            }\n          }\n\n          this.opencnt += 1;\n        }\n      }\n    );\n  }\n\n  loadSegmentMedia(road_id) {\n    //This gets the segment related media\n    this.db_m.SegmentMedia.subscribe((val) => {\n      this.SegmentMediaOnline = true;\n      this.SegmentMediaArray = val;\n    });\n    this.db_m.getSegmentMedia(road_id);\n  }\n\n  ionViewDidEnter() {\n    this.loadDetails();\n  }\n\n  getViewType(event: CustomEvent) {\n    this.viewType = event.detail.value;\n    if (this.viewType == \"recondevice\") {\n      this.open_segmentrecorder(this.roadID, \"recondevice\");\n    }\n    if (this.viewType == \"rec3d\") {\n      this.open_segmentrecorder(this.roadID, \"rec3d\");\n    }\n  }\n\n  getMediaType(event: CustomEvent) {\n    this.uploadmedia = event.detail.value;\n\n    if (this.uploadmedia == \"vid3d\" || this.uploadmedia == \"vid\") {\n      this.opentype = \"video/*\";\n    } else {\n      this.opentype = \"image/*\";\n    }\n    console.log(this.opentype);\n  }\n\n  async open_segmentrecorder(roadid, rectype) {\n    const modal = await this.modalController.create({\n      component: SegmentRecorderComponent,\n      cssClass: \"modal-full\",\n      componentProps: {\n        title: \"Open Recorder\",\n        roadid: roadid,\n        rectype: rectype,\n      },\n    });\n\n    await modal.present();\n  }\n\n  async open_inspection(roadid, mid, mtype, murl) {\n    this.opencnt = 0;\n    await this.loadSegmentData(roadid, mid, mtype, murl);\n  }\n\n  /**\n   * load_map\n   */\n  public async load_map() {\n    // this.latitude = Number(\"-26.651596892582404\");\n    // this.longitude = Number(\"28.618020684007547\");\n    // this.map = new google.maps.Map(\n    //   document.getElementById(\"map_canvas_segments\"),\n    //   {\n    //     center: { lat: this.latitude, lng: this.longitude },\n    //     zoom: 12,\n    //     zoomControl: true,\n    //     mapTypeControl: false,\n    //     fullscreenControl: true,\n    //     streetViewControl: true,\n    //     streetViewControlOptions: {\n    //       position: google.maps.ControlPosition.RIGHT_BOTTOM,\n    //     },\n    //     zoomControlOptions: {\n    //       position: google.maps.ControlPosition.LEFT_BOTTOM,\n    //     },\n    //     fullscreenControlOptions: {\n    //       position: google.maps.ControlPosition.BOTTOM_RIGHT,\n    //     },\n    //   }\n    // );\n    // const loading = await this.loadingCtrl.create({\n    //   message: \"Loading Segments ...\",\n    // });\n    // loading.present();\n    // await this.addSegments(this.map);\n    // loading.dismiss();\n    // this.map.setMapTypeId(\"hybrid\");\n    // //this.getAddress();\n    // // this.add_marker({ lat: this.latitude, lng: this.longitude });\n    // this.map.addListener(\"click\", (mapsMouseEvent) => {\n    //   let location = {\n    //     lat: mapsMouseEvent.latLng.lat(),\n    //     lng: mapsMouseEvent.latLng.lng(),\n    //   };\n    //   // this.add_marker(location);\n    // });\n  }\n\n  async setSegment(coords) {\n    // Create a new polygon with the specified coordinates\n    const polygon = new google.maps.Polyline({\n      path: coords,\n      strokeColor: \"rgb(0, 195, 255)\",\n      strokeOpacity: 0.8,\n      strokeWeight: 5,\n    });\n\n    let me = 0;\n\n    // Add the polygon to the map\n    //polygon.setMap(this.map);\n  }\n\n  myFunction(name: string): void {}\n\n  async resetSegment(coords) {\n    // Create a new polygon with the specified coordinates\n    // const polygon = new google.maps.Polyline({\n    //   path: coords,\n    //   strokeColor: \"rgb(122, 17, 163)\",\n    //   strokeOpacity: 0.8,\n    //   strokeWeight: 5,\n    // });\n    // let me = 0;\n    // // Add the polygon to the map\n    // polygon.setMap(this.map);\n  }\n\n  async addSegments(map) {\n    // for (let i = 0; i < this._segments.length; i++) {\n    //   let coords = this._segments[i][\"geometry\"];\n    //   let fin_coords = [];\n    //   for (let i = 0; i < coords.length; i++) {\n    //     let _res = [];\n    //     let res = \"lng:\" + coords[i];\n    //     res = res.replace(\",\", \",lat:\");\n    //     fin_coords.push(res);\n    //   }\n    //   const outputArray = fin_coords.map((item: string) => {\n    //     const [lng, lat] = item.split(\",\");\n    //     return {\n    //       lng: parseFloat(lng.split(\":\")[1]),\n    //       lat: parseFloat(lat.split(\":\")[1]),\n    //     };\n    //   });\n    //   //console.log(outputArray);\n    //   // Create a new polygon with the specified coordinates\n    //   const polygon = new google.maps.Polyline({\n    //     path: outputArray,\n    //     strokeColor: \"rgb(122, 17, 163)\",\n    //     strokeOpacity: 0.8,\n    //     strokeWeight: 5,\n    //   });\n    //   let me = 0;\n    //   // Add the polygon to the map\n    //   //polygon.setMap(this.map);\n    //   // Add a click event listener to the polygon\n    //   //clearTimeout(this.timerId);\n    //   // Save the original stroke color of the polygon\n    //   const originalStrokeColor = polygon.get(\"strokeColor\");\n    //   // Add a mouseover listener to change the stroke color to pink\n    //   polygon.addListener(\"mouseover\", async () => {\n    //     polygon.setOptions({ strokeColor: \"pink\" });\n    //     this.current_roadid = this._segments[i][\"road_id\"];\n    //     this.show_info = true;\n    //     this.latitude = outputArray[0][\"lat\"];\n    //     this.longitude = outputArray[0][\"lng\"];\n    //     this.getAddress();\n    //   });\n    //   // Add a mouseout listener to reset the stroke color to the original color\n    //   polygon.addListener(\"mouseout\", async () => {\n    //     polygon.setOptions({ strokeColor: originalStrokeColor });\n    //     this.show_info = false;\n    //   });\n    //   polygon.addListener(\"click\", async () => {\n    //     this.show_info = false;\n    //     this.current_roadid = this.uploadmedia = \"\";\n    //     this.viewType = \"\";\n    //     this.segrec_id = this._segments[i][\"id\"];\n    //     this.streetName = this._segments[i][\"street_name\"];\n    //     this.roadID = this._segments[i][\"road_id\"];\n    //     this.VCI = this._segments[i][\"VCI\"];\n    //     this.road_len = this._segments[i][\"road_len\"];\n    //     this.route_seq = this._segments[i][\"route_seq\"];\n    //     this.start_len = this._segments[i][\"st_length\"];\n    //     this.end_km = this._segments[i][\"end_km\"];\n    //     this.munic = this._segments[i][\"municipality\"];\n    //     this.start_km = this._segments[i][\"start_km\"];\n    //     this.latitude = outputArray[0][\"lat\"];\n    //     this.longitude = outputArray[0][\"lng\"];\n    //     this.showMap = false;\n    //     await this.loadSegmentMedia(this.roadID);\n    //     await this.getMediaForOffline(this.roadID);\n    //     //this.setSegment(outputArray);\n    //     ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n    //     //clearTimeout(timerId);\n    //     //console.log(outputArray[0][\"lat\"]);\n    //   });\n    // }\n  }\n\n  async getAddress() {\n    let location = {\n      lat: this.latitude,\n      lng: this.longitude,\n    };\n    this.location_services.osm_geocode_latlng(location).subscribe((res) => {\n      console.log(res);\n\n      this.displayname = res.display_name;\n\n      // this.surburb = res.address.suburb;\n      // this.postalCode = res.address.postcode;\n      // this.city = res.address.city ? res.address.city : res.address.county;\n      // this.province = res.address.state;\n\n      // let name = `${res.address.road}, ${res.address.house_number}`;\n\n      //this.billboardForm.get('name').setValue(name)\n    });\n  }\n\n  getValue(val) {\n    const roundedNum = Math.round(val);\n    this.showpercent = \"Uploading...\" + roundedNum + \"%\";\n    return roundedNum;\n    //console.log(\"Progress: \" + roundedNum);\n  }\n\n  select_file(event) {\n    const file = event.target.files[0];\n    const filepath = \"road-inspection/\" + this.roadID + `/${file.name}`;\n    this.isbusy = true;\n    //this.progessStage = \"Uploading...\";\n    this.showpercent = \"Wait...\";\n\n    try {\n      const task = this.storage.upload(filepath, file);\n      // observe percentage changes\n      this.uploadPercent = task.percentageChanges();\n\n      // get notified when the download URL is available\n      task\n        .snapshotChanges()\n        .pipe(\n          finalize(async () => {\n            this.showpercent = \"Processing...\";\n            this.downloadURL = await this.storage\n              .ref(filepath)\n              .getDownloadURL()\n              .forEach(async (res) => {\n                console.log(res);\n                let media_name = String(file.name);\n                media_name = media_name.slice(0, media_name.indexOf(\".\"));\n                await this.addSegmentMediaNow(\n                  this.roadID,\n                  media_name,\n                  this.uploadmedia,\n                  res\n                );\n                this.isbusy = false;\n              });\n          })\n        )\n        .subscribe();\n    } catch (error) {\n      // handle the exception\n      console.error(error);\n      this.isbusy = false;\n    } finally {\n    }\n  }\n\n  get filteredItems(): string[] {\n    return this._segments.filter(\n      (item) =>\n        typeof item.road_id === \"string\" &&\n        item.road_id.toLowerCase().includes(this.searchQuery.toLowerCase())\n    );\n  }\n\n  async itemClicked(item) {\n    this.show_info = false;\n    this.show_list = false;\n    this.current_roadid = this.uploadmedia = \"\";\n    this.viewType = \"\";\n    this.segrec_id = item.id;\n    this.streetName = item.street_name;\n    this.roadID = item.road_id;\n    this.VCI = item.VCI;\n    this.road_len = item.road_len;\n    this.route_seq = item.route_seq;\n    this.start_len = item.st_length;\n    this.end_km = item.end_km;\n    this.munic = item.municipality;\n    this.start_km = item.start_km;\n\n    let _gps = item.geometry[0].split(\",\");\n\n    this.latitude = _gps[1];\n    this.longitude = _gps[0];\n\n    this.showMap = false;\n    await this.loadSegmentMedia(this.roadID);\n    await this.getMediaForOffline(this.roadID);\n  }\n\n  public gotoMap(res) {\n    if (res) {\n      this.loadDetails();\n    }\n    this.showMap = res;\n    setTimeout(() => {\n      if (this.isInternetAvailable == false) {\n        //Offline\n        //console.log(\"--No Internet--\");\n        this.Offline.get(\"DATA\").then((_data) => {\n          this._segments = _data;\n          //this.show_list = true;\n          this.offlinemode = true;\n        });\n      } else {\n        //Online\n        this.Offline.set(\"DATA\", this._segments);\n        this.offlinemode = false;\n        //console.log(this._segments[0]);\n      }\n    }, 5000);\n  }\n\n  async addSegmentMediaNow(roadid, medianame, mediatype, mediaurl) {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n    const dt = `${year}${month}${day}${hours}${minutes}${seconds}`;\n    let segmentMedia: AddSegmentMediaModal = {\n      user_id: localStorage.getItem(\"uuid\"),\n      road_id: roadid,\n      media_name: medianame,\n      media_type: mediatype,\n      media_url: mediaurl,\n      addedondatetime: dt,\n      enabled: true,\n      approved: true,\n    };\n    await this.db_m.create(segmentMedia);\n  }\n\n  checkInternetAvailability() {\n    this.http.get(\"https://chappie-demo.novosense.africa:5000\").subscribe(\n      () => {\n        this.isInternetAvailable = true;\n\n        console.log(\"--Online--\");\n      },\n\n      () => {\n        this.isInternetAvailable = false;\n\n        console.log(\"--No Internet--\");\n      }\n    );\n  }\n}\n","export default \"ion-content {\\n  --ion-background-color: black;\\n}\\n\\n.text-color {\\n  color: white !important;\\n}\\n\\n.road-id {\\n  font-weight: bold;\\n  color: yellow;\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.slide-title {\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n  padding: 10px;\\n  width: 100%;\\n  font-size: 12px;\\n  z-index: 1;\\n  text-transform: uppercase;\\n}\\n\\nimg {\\n  border-left: 1px solid #ccc;\\n}\\n\\n.info {\\n  color: #fff !important;\\n  font-size: 12px;\\n}\\n\\n.space {\\n  margin-top: 10px;\\n}\\n\\n.download {\\n  color: #ebb609;\\n  width: 100%;\\n  font-weight: lighter;\\n  font-size: 28px;\\n  text-align: center;\\n  margin-top: 20%;\\n}\\n\\n.iframe-container iframe {\\n  width: 100% !important;\\n  height: 100%;\\n  border: none;\\n}\\n\\n.iframe-container {\\n  height: 95vh;\\n  width: 100% !important;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.main-iframe {\\n  flex-grow: 1;\\n  height: 100%;\\n  width: 100% !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2VnbWVudHMvc2VnbWVudHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBQTtBQUNGOztBQUNBO0VBQ0UsdUJBQUE7QUFFRjs7QUFBQTtFQUNFLGlCQUFBO0VBQ0EsYUFBQTtBQUdGOztBQUVBO0VBQ0UsYUFBQTtBQUNGOztBQUNBO0VBQ0Usa0JBQUE7RUFDQSxNQUFBO0VBQ0EsU0FBQTtFQUNBLDJCQUFBO0VBQ0Esa0JBQUE7RUFDQSxvQ0FBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsV0FBQTtFQUNBLGVBQUE7RUFDQSxVQUFBO0VBQ0EseUJBQUE7QUFFRjs7QUFBQTtFQUNFLDJCQUFBO0FBR0Y7O0FBREE7RUFDRSxzQkFBQTtFQUNBLGVBQUE7QUFJRjs7QUFGQTtFQUNFLGdCQUFBO0FBS0Y7O0FBSEE7RUFDRSxjQUFBO0VBQ0EsV0FBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQU1GOztBQUpBO0VBQ0Usc0JBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtBQU9GOztBQUxBO0VBQ0UsWUFBQTtFQUNBLHNCQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFRRjs7QUFKQTtFQUNFLFlBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7QUFPRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NlZ21lbnRzL3NlZ21lbnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cbi50ZXh0LWNvbG9yIHtcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG59XG4ucm9hZC1pZCB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBjb2xvcjogeWVsbG93O1xufVxuLy8gLnByb2dyZXNzIHtcbi8vICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbi8vIH1cbi5oaWRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5zbGlkZS10aXRsZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNyk7XG4gIGNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgZm9udC1zaXplOiAxMnB4O1xuICB6LWluZGV4OiAxO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuaW1nIHtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjY2NjO1xufVxuLmluZm8ge1xuICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xuICBmb250LXNpemU6IDEycHg7XG59XG4uc3BhY2Uge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xufVxuLmRvd25sb2FkIHtcbiAgY29sb3I6IHJnYigyMzUsIDE4MiwgOSk7XG4gIHdpZHRoOiAxMDAlO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgZm9udC1zaXplOiAyOHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDIwJTtcbn1cbi5pZnJhbWUtY29udGFpbmVyIGlmcmFtZSB7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGhlaWdodDogMTAwJTtcbiAgYm9yZGVyOiBub25lO1xufVxuLmlmcmFtZS1jb250YWluZXIge1xuICBoZWlnaHQ6IDk1dmg7XG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAvL2JvcmRlcjogMXB4IHNvbGlkICNmMDA7XG59XG5cbi5tYWluLWlmcmFtZSB7XG4gIGZsZXgtZ3JvdzogMTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAvL2JvcmRlcjogMXB4IHNvbGlkICNmMDA7XG59XG4iXX0= */\";"],"sourceRoot":"webpack:///"}