{"version":3,"sources":["./src/app/pages/ri-reports/ri-reports.module.ts","./src/app/pages/ri-reports/ri-reports.component.ts","./src/app/pages/ri-reports/ri-reports.component.html","./src/app/pages/ri-reports/ri-reports.component.scss"],"names":[],"mappings":"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","file":"pages-ri-reports-ri-reports-module-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { RiReportsComponent } from \"./ri-reports.component\";\n\nconst routes: Routes = [{ path: \"\", component: RiReportsComponent }];\n\n@NgModule({\n  declarations: [RiReportsComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class RiReportsModule {}\n","import { Component, OnInit, ViewChild, ElementRef } from \"@angular/core\";\nimport * as map_style from \"../../../providers/map.styles\";\nimport { Segments, SegmentMedia } from \"../../../services/db\";\nimport { AddSegment, AddSegmentMediaModal } from \"../../../providers\";\nimport { InspectionComponent } from \"../../pages/inspection/inspection.component\";\nimport { SegmentRecorderComponent } from \"../../pages/segment-recorder/segment-recorder.component\";\nimport {\n  PopoverController,\n  ModalController,\n  AlertController,\n  LoadingController,\n  NavController,\n} from \"@ionic/angular\";\nimport { GeolocationService } from \"../../../services/geolocation.service\";\nimport { FirebaseStorage } from \"../../../services/firebase.storage.service\";\n//import { AngularFireStorage } from \"@angular/fire/storage\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { Observable } from \"rxjs\";\nimport { finalize } from \"rxjs/operators\";\nimport { GlobalSettings } from \"../../../services/global.service\";\n\n@Component({\n  selector: \"app-ri-reports\",\n  templateUrl: \"./ri-reports.component.html\",\n  styleUrls: [\"./ri-reports.component.scss\"],\n})\nexport class RiReportsComponent implements OnInit {\n  @ViewChild(\"fileInput\") fileInput: ElementRef;\n\n  map: google.maps.Map;\n  Segments: any;\n  search_array: any[] = [];\n  SegmentMediaArray: any;\n  SegmentArray: any;\n  Markers: any[] = [];\n  SegmantData: any[] = [];\n  latitude: number;\n  longitude: number;\n  surburb: any;\n  postalCode: any;\n  city: any;\n  province: any;\n  myV: string;\n  uploadmedia: any = \"\";\n  viewType: any = \"\";\n  showMap: boolean = true;\n  //media_url: any;\n  opentype: any = \"\";\n  show_info: boolean = false;\n  current_roadid: any = \"\";\n\n  opencnt: any = 0;\n\n  // Create a reference to the class instance\n  self = this;\n  file: string | ArrayBuffer;\n\n  streetName: string;\n  roadID: string;\n  munic: string;\n  start_km: string;\n  end_km: string;\n  geometry: string[];\n  road_len: string;\n  route_seq: string;\n  start_len: string;\n  timerId: any;\n  displayname: any;\n  showpercent: any;\n  progessStage: any = \"\";\n  show_cond: boolean = false;\n  show_cond_done: boolean = false;\n\n  slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n    slidesPerView: 4,\n  };\n\n  media_url: string = \"\";\n  isbusy: boolean = false;\n\n  uploadPercent: any;\n  downloadURL: any;\n  segrec_id: any;\n\n  SURFACE_TYPE: any;\n  SURFACE_STATUS: any;\n\n  constructor(\n    private modalController: ModalController,\n    private db: Segments,\n    private db_m: SegmentMedia,\n    private alertCtrl: AlertController,\n    private global: GlobalSettings,\n    //private storage: FirebaseStorage,\n    private storage: AngularFireStorage,\n    private location_services: GeolocationService,\n    private loadingCtrl: LoadingController\n  ) {}\n\n  ngOnInit(): void {\n    console.log(\"Loading Reports Details\");\n    //this.load_map();\n    //this.loadDetails();\n  }\n\n  change_st(event) {\n    console.log(\"Surface Type Change\");\n    this.SURFACE_TYPE = event.detail.value;\n    if (this.SURFACE_TYPE.length > 0) {\n      this.show_cond = true;\n      //this.loadSpecificDetails(-2, -2);\n    } else {\n      this.show_cond = false;\n    }\n    //console.log(this.SURFACE_TYPE);\n    if (this.search_array.length > 0) {\n      this.search_array[0] = this.SURFACE_TYPE;\n      console.log(\"Search Array:\", this.search_array);\n\n      this.loadSpecificDetails(this.search_array);\n    }\n  }\n\n  change_sc(event) {\n    console.log(\"Surface Condition Change\");\n    this.show_cond_done = true;\n    let input = event.detail.value;\n    console.log(input);\n    this.search_array = [];\n    this.search_array[0] = this.SURFACE_TYPE;\n    if (input.includes(\"assessed\")) {\n      this.search_array[1] = \"assessed\";\n    }\n    if (input.includes(\"notassessed\")) {\n      this.search_array[1] = \"notassessed\";\n    }\n    if (input.includes(\"assessed\") && input.includes(\"notassessed\")) {\n      this.search_array[1] = \"skip\";\n    }\n    if (input.indexOf(\"assessed\") == -1 && input.indexOf(\"notassessed\") == -1) {\n      this.search_array[1] = \"skip\";\n    }\n\n    console.log(\"What to show:\", this.search_array[1]);\n\n    if (input.includes(\"vpoor\")) {\n      this.search_array[2] = true;\n    } else {\n      this.search_array[2] = false;\n    }\n    if (input.includes(\"poor\")) {\n      this.search_array[3] = true;\n    } else {\n      this.search_array[3] = false;\n    }\n    if (input.includes(\"fair\")) {\n      this.search_array[4] = true;\n    } else {\n      this.search_array[4] = false;\n    }\n    if (input.includes(\"good\")) {\n      this.search_array[5] = true;\n    } else {\n      this.search_array[5] = false;\n    }\n    if (input.includes(\"vgood\")) {\n      this.search_array[6] = true;\n    } else {\n      this.search_array[6] = false;\n    }\n\n    console.log(\"Search Array:\", this.search_array);\n\n    this.loadSpecificDetails(this.search_array);\n  }\n\n  loadSpecificDetails(search) {\n    this.db.Segments.subscribe((val) => {\n      this.Segments = val;\n      if (this.Segments.length > 0) {\n        this.load_map(false);\n        //console.log(\"Segments\", this.Segments[2]);\n        // this.latitude = Number(\"28.618020684007547\");\n        // this.longitude = Number(\"-26.651596892582404\");\n      } else {\n        this.load_map(true);\n      }\n    });\n    this.db.getAll();\n  }\n\n  // loadDetails() {\n  //   this.db.Segments.subscribe((val) => {\n  //     this.Segments = val;\n  //     if (this.Segments.length > 0) {\n  //       this.load_map();\n  //       //console.log(\"Segments\", this.Segments[2]);\n  //       // this.latitude = Number(\"28.618020684007547\");\n  //       // this.longitude = Number(\"-26.651596892582404\");\n  //     }\n  //   });\n  //   this.db.getAll();\n  // }\n\n  async loadSegmentData(road_id, mid, mtype, murl) {\n    (await this.db.getSegment(road_id)).subscribe(\n      async (data: AddSegment[]) => {\n        if (this.opencnt < 1) {\n          const modal = await this.modalController.create({\n            component: InspectionComponent,\n            cssClass: \"modal-full\",\n            componentProps: {\n              title: \"Open Inspection\",\n              segrec_id: this.segrec_id,\n              roadid: data[0][\"road_id\"],\n              mid: mid,\n              murl: murl,\n              mtype: mtype,\n              segment: data[0],\n            },\n          });\n\n          await modal.present();\n          this.opencnt += 1;\n        }\n      }\n    );\n  }\n\n  loadSegmentMedia(road_id) {\n    //This gets the segment related media\n    this.db_m.SegmentMedia.subscribe((val) => {\n      this.SegmentMediaArray = val;\n    });\n    this.db_m.getSegmentMedia(road_id);\n  }\n\n  ionViewDidEnter() {\n    //this.loadDetails();\n  }\n\n  getViewType(event: CustomEvent) {\n    this.viewType = event.detail.value;\n    if (this.viewType == \"recondevice\") {\n      this.open_segmentrecorder(this.roadID, \"recondevice\");\n    }\n    if (this.viewType == \"rec3d\") {\n      this.open_segmentrecorder(this.roadID, \"rec3d\");\n    }\n  }\n\n  getMediaType(event: CustomEvent) {\n    this.uploadmedia = event.detail.value;\n\n    if (this.uploadmedia == \"vid3d\" || this.uploadmedia == \"vid\") {\n      this.opentype = \"video/*\";\n    } else {\n      this.opentype = \"image/*\";\n    }\n    console.log(this.opentype);\n  }\n\n  async open_segmentrecorder(roadid, rectype) {\n    const modal = await this.modalController.create({\n      component: SegmentRecorderComponent,\n      cssClass: \"modal-full\",\n      componentProps: {\n        title: \"Open Recorder\",\n        roadid: roadid,\n        rectype: rectype,\n      },\n    });\n\n    await modal.present();\n  }\n\n  async open_inspection(roadid, mid, mtype, murl) {\n    this.opencnt = 0;\n    await this.loadSegmentData(roadid, mid, mtype, murl);\n  }\n\n  /**\n   * load_map\n   */\n  public async load_map(clear) {\n    this.latitude = Number(\"-26.651596892582404\");\n    this.longitude = Number(\"28.618020684007547\");\n    this.map = new google.maps.Map(\n      document.getElementById(\"map_canvas_segments\"),\n      {\n        center: { lat: this.latitude, lng: this.longitude },\n        zoom: 12,\n        zoomControl: true,\n        mapTypeControl: false,\n        fullscreenControl: true,\n        streetViewControl: true,\n\n        streetViewControlOptions: {\n          position: google.maps.ControlPosition.RIGHT_BOTTOM,\n        },\n\n        zoomControlOptions: {\n          position: google.maps.ControlPosition.LEFT_BOTTOM,\n        },\n\n        fullscreenControlOptions: {\n          position: google.maps.ControlPosition.BOTTOM_RIGHT,\n        },\n      }\n    );\n\n    const loading = await this.loadingCtrl.create({\n      message: \"Loading Segments ...\",\n    });\n\n    loading.present();\n\n    await this.addSegments(this.map, clear);\n\n    loading.dismiss();\n\n    this.map.setMapTypeId(\"roadmap\");\n    //this.getAddress();\n\n    // this.add_marker({ lat: this.latitude, lng: this.longitude });\n\n    this.map.addListener(\"click\", (mapsMouseEvent) => {\n      let location = {\n        lat: mapsMouseEvent.latLng.lat(),\n        lng: mapsMouseEvent.latLng.lng(),\n      };\n      // this.add_marker(location);\n    });\n  }\n\n  async setSegment(coords) {\n    // Create a new polygon with the specified coordinates\n    const polygon = new google.maps.Polyline({\n      path: coords,\n      strokeColor: \"rgb(0, 195, 255)\",\n      strokeOpacity: 0.8,\n      strokeWeight: 5,\n    });\n\n    let me = 0;\n\n    // Add the polygon to the map\n    polygon.setMap(this.map);\n  }\n\n  myFunction(name: string): void {}\n\n  async resetSegment(coords) {\n    // Create a new polygon with the specified coordinates\n    const polygon = new google.maps.Polyline({\n      path: coords,\n      strokeColor: \"rgb(122, 17, 163)\",\n      strokeOpacity: 0.8,\n      strokeWeight: 5,\n    });\n\n    let me = 0;\n\n    // Add the polygon to the map\n    polygon.setMap(this.map);\n  }\n\n  async addSegments(map, clear) {\n    for (let i = 0; i < this.Segments.length; i++) {\n      if (\n        //Display only selected surface type(s)\n        this.search_array[0].indexOf(this.Segments[i][\"surfacetype\"]) !== -1\n      ) {\n        //Select Assessed/Not Assessed\n        if (this.search_array[1] == \"assessed\") {\n          if (this.Segments[i][\"ASSESSED\"]) {\n            //Get selected Road Status/Condition\n            let vci_array = [];\n            let cnt = 0;\n\n            if (this.search_array[2]) {\n              //If Very Good Condition was selected\n              while (cnt < 30) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[3]) {\n              //If Good Condition was selected\n              cnt = 30;\n              while (cnt < 50) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[4]) {\n              //If Fair Condition was selected\n              cnt = 50;\n              while (cnt < 70) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[5]) {\n              //If Poor Condition was selected\n              cnt = 70;\n              while (cnt < 85) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[6]) {\n              //If Very Poor Condition was selected\n              cnt = 85;\n              while (cnt <= 100) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n\n            //console.log(\"Selected VCI:\", vci_array);\n\n            if (\n              vci_array.includes(this.Segments[i][\"VCI\"]) ||\n              vci_array.length == 0\n            ) {\n              let coords = this.Segments[i][\"geometry\"];\n              let vci = Number(this.Segments[i][\"VCI\"]);\n\n              let fin_coords = [];\n              for (let i = 0; i < coords.length; i++) {\n                let _res = [];\n                let res = \"lng:\" + coords[i];\n                res = res.replace(\",\", \",lat:\");\n\n                fin_coords.push(res);\n              }\n\n              const outputArray = fin_coords.map((item: string) => {\n                const [lng, lat] = item.split(\",\");\n                return {\n                  lng: parseFloat(lng.split(\":\")[1]),\n                  lat: parseFloat(lat.split(\":\")[1]),\n                };\n              });\n\n              //console.log(outputArray);\n              let poly_color = \"rgb(255,0,170)\";\n              if (vci >= 0 && vci < 30) {\n                poly_color = \"rgb(128,0,128)\";\n              }\n              if (vci >= 30 && vci < 50) {\n                poly_color = \"rgb(255,0,0)\";\n              }\n              if (vci >= 50 && vci < 70) {\n                poly_color = \"rgb(255,165,0)\";\n              }\n              if (vci >= 70 && vci < 85) {\n                poly_color = \"rgb(0,128,0)\";\n              }\n              if (vci >= 85 && vci <= 100) {\n                poly_color = \"rgb(0,0,255)\";\n              }\n\n              // Create a new polygon with the specified coordinates\n              const polygon = new google.maps.Polyline({\n                path: outputArray,\n                strokeColor: poly_color,\n                strokeOpacity: 0.8,\n                strokeWeight: 5,\n              });\n\n              let me = 0;\n\n              // Add the polygon to the map\n              polygon.setMap(this.map);\n              // Add a click event listener to the polygon\n\n              if (clear) {\n                polygon.setMap(null);\n              }\n\n              //clearTimeout(this.timerId);\n\n              // Save the original stroke color of the polygon\n              const originalStrokeColor = polygon.get(\"strokeColor\");\n\n              // Add a mouseover listener to change the stroke color to pink\n              polygon.addListener(\"mouseover\", async () => {\n                polygon.setOptions({ strokeColor: \"pink\" });\n                this.current_roadid = this.Segments[i][\"road_id\"];\n                this.show_info = true;\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n                this.getAddress();\n              });\n\n              // Add a mouseout listener to reset the stroke color to the original color\n              polygon.addListener(\"mouseout\", async () => {\n                polygon.setOptions({ strokeColor: originalStrokeColor });\n                this.show_info = false;\n              });\n\n              polygon.addListener(\"click\", async () => {\n                this.show_info = false;\n                this.current_roadid = this.uploadmedia = \"\";\n                this.viewType = \"\";\n                this.segrec_id = this.Segments[i][\"id\"];\n                this.streetName = this.Segments[i][\"street_name\"];\n                this.roadID = this.Segments[i][\"road_id\"];\n                this.road_len = this.Segments[i][\"road_len\"];\n                this.route_seq = this.Segments[i][\"route_seq\"];\n                this.start_len = this.Segments[i][\"st_length\"];\n                this.end_km = this.Segments[i][\"end_km\"];\n                this.munic = this.Segments[i][\"municipality\"];\n                this.start_km = this.Segments[i][\"start_km\"];\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n\n                this.showMap = false;\n                await this.loadSegmentMedia(this.roadID);\n                //this.setSegment(outputArray);\n                ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n                //clearTimeout(timerId);\n                //console.log(outputArray[0][\"lat\"]);\n              });\n            }\n          }\n        } else if (this.search_array[1] == \"notassessed\") {\n          if (this.Segments[i][\"ASSESSED\"] == false) {\n            //Get selected Road Status/Condition\n            let vci_array = [];\n            let cnt = 0;\n\n            if (this.search_array[2]) {\n              //If Very Good Condition was selected\n              while (cnt < 30) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[3]) {\n              //If Good Condition was selected\n              cnt = 30;\n              while (cnt < 50) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[4]) {\n              //If Fair Condition was selected\n              cnt = 50;\n              while (cnt < 70) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[5]) {\n              //If Poor Condition was selected\n              cnt = 70;\n              while (cnt < 85) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n            if (this.search_array[6]) {\n              //If Very Poor Condition was selected\n              cnt = 85;\n              while (cnt <= 100) {\n                vci_array.push(String(cnt));\n                cnt += 1;\n              }\n            }\n\n            //console.log(\"Selected VCI:\", vci_array);\n\n            if (\n              vci_array.includes(this.Segments[i][\"VCI\"]) ||\n              vci_array.length == 0\n            ) {\n              let coords = this.Segments[i][\"geometry\"];\n              let vci = Number(this.Segments[i][\"VCI\"]);\n\n              let fin_coords = [];\n              for (let i = 0; i < coords.length; i++) {\n                let _res = [];\n                let res = \"lng:\" + coords[i];\n                res = res.replace(\",\", \",lat:\");\n\n                fin_coords.push(res);\n              }\n\n              const outputArray = fin_coords.map((item: string) => {\n                const [lng, lat] = item.split(\",\");\n                return {\n                  lng: parseFloat(lng.split(\":\")[1]),\n                  lat: parseFloat(lat.split(\":\")[1]),\n                };\n              });\n\n              //console.log(outputArray);\n              let poly_color = \"rgb(255,0,170)\";\n              if (vci >= 0 && vci < 30) {\n                poly_color = \"rgb(128,0,128)\";\n              }\n              if (vci >= 30 && vci < 50) {\n                poly_color = \"rgb(255,0,0)\";\n              }\n              if (vci >= 50 && vci < 70) {\n                poly_color = \"rgb(255,165,0)\";\n              }\n              if (vci >= 70 && vci < 85) {\n                poly_color = \"rgb(0,128,0)\";\n              }\n              if (vci >= 85 && vci <= 100) {\n                poly_color = \"rgb(0,0,255)\";\n              }\n\n              // Create a new polygon with the specified coordinates\n              const polygon = new google.maps.Polyline({\n                path: outputArray,\n                strokeColor: poly_color,\n                strokeOpacity: 0.8,\n                strokeWeight: 5,\n              });\n\n              let me = 0;\n\n              // Add the polygon to the map\n              polygon.setMap(this.map);\n              // Add a click event listener to the polygon\n\n              if (clear) {\n                polygon.setMap(null);\n              }\n\n              //clearTimeout(this.timerId);\n\n              // Save the original stroke color of the polygon\n              const originalStrokeColor = polygon.get(\"strokeColor\");\n\n              // Add a mouseover listener to change the stroke color to pink\n              polygon.addListener(\"mouseover\", async () => {\n                polygon.setOptions({ strokeColor: \"pink\" });\n                this.current_roadid = this.Segments[i][\"road_id\"];\n                this.show_info = true;\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n                this.getAddress();\n              });\n\n              // Add a mouseout listener to reset the stroke color to the original color\n              polygon.addListener(\"mouseout\", async () => {\n                polygon.setOptions({ strokeColor: originalStrokeColor });\n                this.show_info = false;\n              });\n\n              polygon.addListener(\"click\", async () => {\n                this.show_info = false;\n                this.current_roadid = this.uploadmedia = \"\";\n                this.viewType = \"\";\n                this.segrec_id = this.Segments[i][\"id\"];\n                this.streetName = this.Segments[i][\"street_name\"];\n                this.roadID = this.Segments[i][\"road_id\"];\n                this.road_len = this.Segments[i][\"road_len\"];\n                this.route_seq = this.Segments[i][\"route_seq\"];\n                this.start_len = this.Segments[i][\"st_length\"];\n                this.end_km = this.Segments[i][\"end_km\"];\n                this.munic = this.Segments[i][\"municipality\"];\n                this.start_km = this.Segments[i][\"start_km\"];\n                this.latitude = outputArray[0][\"lat\"];\n                this.longitude = outputArray[0][\"lng\"];\n\n                this.showMap = false;\n                await this.loadSegmentMedia(this.roadID);\n                //this.setSegment(outputArray);\n                ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n                //clearTimeout(timerId);\n                //console.log(outputArray[0][\"lat\"]);\n              });\n            }\n          }\n        } else {\n          //Get selected Road Status/Condition\n          let vci_array = [];\n          let cnt = 0;\n\n          if (this.search_array[2]) {\n            //If Very Good Condition was selected\n            while (cnt < 30) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[3]) {\n            //If Good Condition was selected\n            cnt = 30;\n            while (cnt < 50) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[4]) {\n            //If Fair Condition was selected\n            cnt = 50;\n            while (cnt < 70) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[5]) {\n            //If Poor Condition was selected\n            cnt = 70;\n            while (cnt < 85) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n          if (this.search_array[6]) {\n            //If Very Poor Condition was selected\n            cnt = 85;\n            while (cnt <= 100) {\n              vci_array.push(String(cnt));\n              cnt += 1;\n            }\n          }\n\n          //console.log(\"Selected VCI:\", vci_array);\n\n          if (\n            vci_array.includes(this.Segments[i][\"VCI\"]) ||\n            vci_array.length == 0\n          ) {\n            let coords = this.Segments[i][\"geometry\"];\n            let vci = Number(this.Segments[i][\"VCI\"]);\n\n            let fin_coords = [];\n            for (let i = 0; i < coords.length; i++) {\n              let _res = [];\n              let res = \"lng:\" + coords[i];\n              res = res.replace(\",\", \",lat:\");\n\n              fin_coords.push(res);\n            }\n\n            const outputArray = fin_coords.map((item: string) => {\n              const [lng, lat] = item.split(\",\");\n              return {\n                lng: parseFloat(lng.split(\":\")[1]),\n                lat: parseFloat(lat.split(\":\")[1]),\n              };\n            });\n\n            //console.log(outputArray);\n            let poly_color = \"rgb(255,0,170)\";\n            if (vci >= 0 && vci < 30) {\n              poly_color = \"rgb(128,0,128)\";\n            }\n            if (vci >= 30 && vci < 50) {\n              poly_color = \"rgb(255,0,0)\";\n            }\n            if (vci >= 50 && vci < 70) {\n              poly_color = \"rgb(255,165,0)\";\n            }\n            if (vci >= 70 && vci < 85) {\n              poly_color = \"rgb(0,128,0)\";\n            }\n            if (vci >= 85 && vci <= 100) {\n              poly_color = \"rgb(0,0,255)\";\n            }\n\n            // Create a new polygon with the specified coordinates\n            const polygon = new google.maps.Polyline({\n              path: outputArray,\n              strokeColor: poly_color,\n              strokeOpacity: 0.8,\n              strokeWeight: 5,\n            });\n\n            let me = 0;\n\n            // Add the polygon to the map\n            polygon.setMap(this.map);\n            // Add a click event listener to the polygon\n\n            if (clear) {\n              polygon.setMap(null);\n            }\n\n            //clearTimeout(this.timerId);\n\n            // Save the original stroke color of the polygon\n            const originalStrokeColor = polygon.get(\"strokeColor\");\n\n            // Add a mouseover listener to change the stroke color to pink\n            polygon.addListener(\"mouseover\", async () => {\n              polygon.setOptions({ strokeColor: \"pink\" });\n              this.current_roadid = this.Segments[i][\"road_id\"];\n              this.show_info = true;\n              this.latitude = outputArray[0][\"lat\"];\n              this.longitude = outputArray[0][\"lng\"];\n              this.getAddress();\n            });\n\n            // Add a mouseout listener to reset the stroke color to the original color\n            polygon.addListener(\"mouseout\", async () => {\n              polygon.setOptions({ strokeColor: originalStrokeColor });\n              this.show_info = false;\n            });\n\n            polygon.addListener(\"click\", async () => {\n              this.show_info = false;\n              this.current_roadid = this.uploadmedia = \"\";\n              this.viewType = \"\";\n              this.segrec_id = this.Segments[i][\"id\"];\n              this.streetName = this.Segments[i][\"street_name\"];\n              this.roadID = this.Segments[i][\"road_id\"];\n              this.road_len = this.Segments[i][\"road_len\"];\n              this.route_seq = this.Segments[i][\"route_seq\"];\n              this.start_len = this.Segments[i][\"st_length\"];\n              this.end_km = this.Segments[i][\"end_km\"];\n              this.munic = this.Segments[i][\"municipality\"];\n              this.start_km = this.Segments[i][\"start_km\"];\n              this.latitude = outputArray[0][\"lat\"];\n              this.longitude = outputArray[0][\"lng\"];\n\n              this.showMap = false;\n              await this.loadSegmentMedia(this.roadID);\n              //this.setSegment(outputArray);\n              ///this.timerId = setTimeout(() => this.resetSegment(outputArray), 3000);\n              //clearTimeout(timerId);\n              //console.log(outputArray[0][\"lat\"]);\n            });\n          }\n        }\n      }\n    }\n  }\n\n  async getAddress() {\n    let location = {\n      lat: this.latitude,\n      lng: this.longitude,\n    };\n    this.location_services.osm_geocode_latlng(location).subscribe((res) => {\n      console.log(res);\n\n      this.displayname = res.display_name;\n\n      // this.surburb = res.address.suburb;\n      // this.postalCode = res.address.postcode;\n      // this.city = res.address.city ? res.address.city : res.address.county;\n      // this.province = res.address.state;\n\n      // let name = `${res.address.road}, ${res.address.house_number}`;\n\n      //this.billboardForm.get('name').setValue(name)\n    });\n  }\n\n  getValue(val) {\n    const roundedNum = Math.round(val);\n    this.showpercent = \"Uploading...\" + roundedNum + \"%\";\n    return roundedNum;\n    //console.log(\"Progress: \" + roundedNum);\n  }\n\n  select_file(event) {\n    const file = event.target.files[0];\n    const filepath = \"road-inspection/\" + this.roadID + `/${file.name}`;\n    this.isbusy = true;\n    //this.progessStage = \"Uploading...\";\n    this.showpercent = \"Wait...\";\n\n    try {\n      const task = this.storage.upload(filepath, file);\n      // observe percentage changes\n      this.uploadPercent = task.percentageChanges();\n\n      // get notified when the download URL is available\n      task\n        .snapshotChanges()\n        .pipe(\n          finalize(async () => {\n            this.showpercent = \"Processing...\";\n            this.downloadURL = await this.storage\n              .ref(filepath)\n              .getDownloadURL()\n              .forEach(async (res) => {\n                console.log(res);\n                let media_name = String(file.name);\n                media_name = media_name.slice(0, media_name.indexOf(\".\"));\n                await this.addSegmentMediaNow(\n                  this.roadID,\n                  media_name,\n                  this.uploadmedia,\n                  res\n                );\n                this.isbusy = false;\n              });\n          })\n        )\n        .subscribe();\n    } catch (error) {\n      // handle the exception\n      console.error(error);\n      this.isbusy = false;\n    } finally {\n    }\n  }\n\n  public gotoMap(res) {\n    if (res) {\n      //this.loadDetails();\n    }\n    this.showMap = res;\n  }\n\n  async addSegmentMediaNow(roadid, medianame, mediatype, mediaurl) {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n    const dt = `${year}${month}${day}${hours}${minutes}${seconds}`;\n    let segmentMedia: AddSegmentMediaModal = {\n      user_id: localStorage.getItem(\"uuid\"),\n      road_id: roadid,\n      media_name: medianame,\n      media_type: mediatype,\n      media_url: mediaurl,\n      addedondatetime: dt,\n      enabled: true,\n      approved: true,\n    };\n    await this.db_m.create(segmentMedia);\n  }\n}\n","export default \"<ion-content #cont>\\n  <div\\n    class=\\\"container-fluid page-body-wrapper\\\"\\n    style=\\\"min-height: 100%; padding-top: 0%\\\"\\n  >\\n    <div class=\\\"main-panel-only w-100\\\">\\n      <div class=\\\"page-header\\\">\\n        <div *ngIf=\\\"show_cond_done\\\" class=\\\"col-md-6\\\">\\n          <h3 class=\\\"page-title\\\">Segments Found [{{ Segments.length }}]</h3>\\n        </div>\\n        <div *ngIf=\\\"show_info\\\" class=\\\"col-md-6 info\\\">\\n          Segment ID:&nbsp;&nbsp;{{ current_roadid }}\\n          <div>Address:&nbsp;&nbsp;{{ displayname }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"SURFACE_TYPE\\\">SURFACE TYPE </label>\\n        <ion-select\\n          (ionChange)=\\\"change_st($event)\\\"\\n          multiple=\\\"true\\\"\\n          class=\\\"form-control\\\"\\n          value=\\\"select\\\"\\n          okText=\\\"Okay\\\"\\n          cancelText=\\\"Dismiss\\\"\\n          id=\\\"SURFACE_TYPE\\\"\\n        >\\n          <ion-select-option value=\\\"block\\\">BLOCK</ion-select-option>\\n          <ion-select-option value=\\\"flexible\\\">FLEXIBLE</ion-select-option>\\n          <ion-select-option value=\\\"gravel\\\">GRAVEL</ion-select-option>\\n        </ion-select>\\n      </div>\\n\\n      <div *ngIf=\\\"show_cond\\\" class=\\\"form-group\\\">\\n        <label for=\\\"SURFACE_STATUS\\\">SURFACE CONDITION/STATUS </label>\\n        <ion-select\\n          (ionChange)=\\\"change_sc($event)\\\"\\n          class=\\\"form-control\\\"\\n          multiple=\\\"true\\\"\\n          value=\\\"select\\\"\\n          okText=\\\"Okay\\\"\\n          cancelText=\\\"Dismiss\\\"\\n          id=\\\"SURFACE_STATUS\\\"\\n        >\\n          <ion-select-option value=\\\"notassessed\\\"\\n            >NOT ASSESSED</ion-select-option\\n          >\\n          <ion-select-option value=\\\"assessed\\\">ASSESSED</ion-select-option>\\n          <ion-select-option value=\\\"vpoor\\\">VERY POOR</ion-select-option>\\n          <ion-select-option value=\\\"poor\\\">POOR</ion-select-option>\\n          <ion-select-option value=\\\"fair\\\">FAIR</ion-select-option>\\n          <ion-select-option value=\\\"good\\\">GOOD</ion-select-option>\\n          <ion-select-option value=\\\"vgood\\\">VERY GOOD</ion-select-option>\\n        </ion-select>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <!--MAP-->\\n        <div class=\\\"col-md-12 grid-margin\\\">\\n          <div class=\\\"card\\\" id=\\\"map_canvas_segments\\\" style=\\\"height: 85vh\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- main-panel ends -->\\n  </div>\\n  <!-- page-body-wrapper ends -->\\n</ion-content>\\n\";","export default \"ion-content {\\n  --ion-background-color: black;\\n}\\n\\n.text-color {\\n  color: white !important;\\n}\\n\\n.road-id {\\n  font-weight: bold;\\n  color: yellow;\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.slide-title {\\n  position: absolute;\\n  top: 0;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  text-align: center;\\n  background-color: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n  padding: 10px;\\n  width: 100%;\\n  font-size: 12px;\\n  z-index: 1;\\n  text-transform: uppercase;\\n}\\n\\nimg {\\n  border-left: 1px solid #ccc;\\n}\\n\\n.info {\\n  color: #fff !important;\\n  font-size: 12px;\\n}\\n\\nlabel {\\n  color: beige;\\n}\\n\\n.title {\\n  margin-bottom: 10px;\\n  color: yellow;\\n  font-size: 13px;\\n  font-weight: bold;\\n}\\n\\n.test {\\n  color: #ff00aa;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmktcmVwb3J0cy9yaS1yZXBvcnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkJBQUE7QUFDRjs7QUFDQTtFQUNFLHVCQUFBO0FBRUY7O0FBQUE7RUFDRSxpQkFBQTtFQUNBLGFBQUE7QUFHRjs7QUFFQTtFQUNFLGFBQUE7QUFDRjs7QUFDQTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLFNBQUE7RUFDQSwyQkFBQTtFQUNBLGtCQUFBO0VBQ0Esb0NBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLFdBQUE7RUFDQSxlQUFBO0VBQ0EsVUFBQTtFQUNBLHlCQUFBO0FBRUY7O0FBQUE7RUFDRSwyQkFBQTtBQUdGOztBQURBO0VBQ0Usc0JBQUE7RUFDQSxlQUFBO0FBSUY7O0FBRkE7RUFDRSxZQUFBO0FBS0Y7O0FBSEE7RUFDRSxtQkFBQTtFQUNBLGFBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7QUFNRjs7QUFKQTtFQUNFLGNBQUE7QUFPRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JpLXJlcG9ydHMvcmktcmVwb3J0cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IHtcbiAgLS1pb24tYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG59XG4udGV4dC1jb2xvciB7XG4gIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xufVxuLnJvYWQtaWQge1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgY29sb3I6IHllbGxvdztcbn1cbi8vIC5wcm9ncmVzcyB7XG4vLyAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XG4vLyB9XG4uaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uc2xpZGUtdGl0bGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICBjb2xvcjogI2ZmZjtcbiAgcGFkZGluZzogMTBweDtcbiAgd2lkdGg6IDEwMCU7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgei1pbmRleDogMTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbn1cbmltZyB7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2NjYztcbn1cbi5pbmZvIHtcbiAgY29sb3I6ICNmZmYgIWltcG9ydGFudDtcbiAgZm9udC1zaXplOiAxMnB4O1xufVxubGFiZWwge1xuICBjb2xvcjogYmVpZ2U7XG59XG4udGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICBjb2xvcjogeWVsbG93O1xuICBmb250LXNpemU6IDEzcHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLnRlc3Qge1xuICBjb2xvcjogcmdiKDI1NSwgMCwgMTcwKTtcbn1cbiJdfQ== */\";"],"sourceRoot":"webpack:///"}