{"version":3,"sources":["./src/app/pages/vci-processing/vci-processing.component.scss","./src/app/pages/vci-processing/vci-processing.component.ts","./src/app/pages/vci-processing/vci-processing.module.ts","./src/app/pages/vci-processing/vci-processing.component.html"],"names":[],"mappings":"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","file":"pages-vci-processing-vci-processing-module-es2015.js","sourcesContent":["export default \"ion-content {\\n  --ion-background-color: black;\\n}\\n\\n.text-color {\\n  color: white !important;\\n}\\n\\n.hide {\\n  display: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvdmNpLXByb2Nlc3NpbmcvdmNpLXByb2Nlc3NpbmcuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBQTtBQUNGOztBQUNBO0VBQ0UsdUJBQUE7QUFFRjs7QUFBQTtFQUNFLGFBQUE7QUFHRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ZjaS1wcm9jZXNzaW5nL3ZjaS1wcm9jZXNzaW5nLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNvbnRlbnQge1xuICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cbi50ZXh0LWNvbG9yIHtcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG59XG4uaGlkZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { AngularFireStorage } from \"@angular/fire/storage\";\nimport { finalize } from \"rxjs/operators\";\nimport { AddVCIModal } from \"src/providers\";\nimport { Vci } from \"../../../services/db\";\n\n@Component({\n  selector: \"app-vci-processing\",\n  templateUrl: \"./vci-processing.component.html\",\n  styleUrls: [\"./vci-processing.component.scss\"],\n})\nexport class VciProcessingComponent implements OnInit {\n  public isbusy: boolean = false;\n  public showpercent: any = \"\";\n  uploadPercent: any;\n  downloadURL: any;\n  vci_state: any = \"\";\n  processed: boolean = false;\n  _vci: any;\n\n  constructor(private storage: AngularFireStorage, private db: Vci) {}\n\n  ngOnInit(): void {\n    this.loadDetails();\n  }\n\n  // async uploadFile(event) {\n  //   // Get the file input element\n  //   const fileInput = document.getElementById(\"fileInput\");\n\n  //   // Get the selected file\n  //   const file = event.target.files[0];\n\n  //   // Create a new FormData object\n  //   const formData = new FormData();\n\n  //   // Append the file to the FormData object\n  //   formData.append(\"file\", file);\n\n  //   // Send the file to the server using an AJAX request\n  //   const xhr = new XMLHttpRequest();\n  //   xhr.open(\"POST\", \"http://localhost:9000/vci\");\n  //   xhr.onreadystatechange = () => {\n  //     if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\n  //       // Create a new blob object from the response data\n  //       const blob = new Blob([xhr.response], {\n  //         type: \"application/vnd.ms-excel\",\n  //       });\n\n  //       // Create a URL for the blob\n  //       const url = window.URL.createObjectURL(blob);\n\n  //       // Create a link element and click it to download the file\n  //       const link = document.createElement(\"a\");\n  //       link.href = url;\n  //       link.download = \"updated_file.xlsx\";\n  //       document.body.appendChild(link);\n  //       link.click();\n  //       document.body.removeChild(link);\n  //     }\n  //   };\n  //   xhr.responseType = \"arraybuffer\";\n  //   xhr.send(formData);\n  // }\n\n  downloadFile(url) {\n    window.open(url, \"_blank\");\n  }\n\n  foundVCIState(state: string) {\n    if (state == \"\") {\n      this.vci_state = false;\n    } else {\n      this.vci_state = true;\n    }\n  }\n\n  public getdate(dt: string) {\n    let _dt =\n      dt.substring(0, 4) +\n      \"-\" +\n      dt.substring(4, 6) +\n      \"-\" +\n      dt.substring(6, 8) +\n      \" \" +\n      dt.substring(8, 10) +\n      \":\" +\n      dt.substring(10, 12) +\n      \":\" +\n      dt.substring(12, 14);\n    return _dt;\n  }\n\n  loadDetails() {\n    this.db.Vci.subscribe((val) => {\n      console.log(val[0]);\n      this._vci = val;\n      //this.processed = this._vci[\"processed\"];\n    });\n    this.db.getAll();\n  }\n\n  update_vci(event) {\n    const file = event.target.files[0];\n    const filepath = \"road-inspection/vci\" + `/${file.name}`;\n    this.isbusy = true;\n    //this.progessStage = \"Uploading...\";\n    this.showpercent = \"Wait...\";\n\n    try {\n      const task = this.storage.upload(filepath, file);\n      // observe percentage changes\n      this.uploadPercent = task.percentageChanges();\n\n      // get notified when the download URL is available\n      task\n        .snapshotChanges()\n        .pipe(\n          finalize(async () => {\n            this.showpercent = \"Processing...\";\n            this.downloadURL = await this.storage\n              .ref(filepath)\n              .getDownloadURL()\n              .forEach(async (res) => {\n                console.log(res);\n                await this.updateVCI(res);\n                this.isbusy = false;\n              });\n          })\n        )\n        .subscribe();\n    } catch (error) {\n      // handle the exception\n      console.error(error);\n      this.isbusy = false;\n    } finally {\n    }\n  }\n  async updateVCI(file_url) {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const day = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n    const dt = `${year}${month}${day}${hours}${minutes}${seconds}`;\n    let vciData: AddVCIModal = {\n      file_url: file_url,\n      processed: false,\n      processed_date: dt,\n      state: \"\",\n    };\n    await this.db.update(\"jJpNhkK1klhQm6ZUgP9M\", vciData);\n    this.showpercent = \"\";\n  }\n\n  getValue(val) {\n    const roundedNum = Math.round(val);\n    this.showpercent = \"Uploading...\" + roundedNum + \"%\";\n    return roundedNum;\n    //console.log(\"Progress: \" + roundedNum);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { VciProcessingComponent } from \"./vci-processing.component\";\n\nconst routes: Routes = [{ path: \"\", component: VciProcessingComponent }];\n\n@NgModule({\n  declarations: [VciProcessingComponent],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n})\nexport class VciProcessingModule {}\n","export default \"<ion-content #cont>\\n  <div\\n    class=\\\"container-fluid page-body-wrapper\\\"\\n    style=\\\"min-height: 100%; padding-top: 0%\\\"\\n  >\\n    <div class=\\\"main-panel-only w-100\\\">\\n      <div class=\\\"row\\\">\\n        <div\\n          *ngIf=\\\"!isbusy && !vci_state\\\"\\n          class=\\\"col-md-12 grid-margin stretch-card\\\"\\n        >\\n          <input type=\\\"file\\\" id=\\\"fileInput\\\" (change)=\\\"update_vci($event)\\\" />\\n        </div>\\n        <div class=\\\"hide\\\" *ngIf=\\\"uploadPercent | async as percent\\\">\\n          Uploading: {{ getValue(percent) }}%\\n          <ion-progress-bar [value]=\\\"percent\\\"></ion-progress-bar>\\n        </div>\\n        <div *ngIf=\\\"isbusy\\\" class=\\\"col-md-12 grid-margin stretch-card\\\">\\n          <ion-button>{{ showpercent }}</ion-button>\\n        </div>\\n\\n        <div class=\\\"col-md-12 grid-margin stretch-card\\\">\\n          <div class=\\\"table-responsive\\\" style=\\\"max-height: max-content\\\">\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr></tr>\\n              </thead>\\n\\n              <tbody>\\n                <tr>\\n                  <td>VCI File</td>\\n                  <td *ngFor=\\\"let item of _vci\\\">\\n                    <div class=\\\"hide\\\">{{ foundVCIState(item.state) }}</div>\\n                    <ion-button\\n                      *ngIf=\\\"!item.processed && !vci_state\\\"\\n                      color=\\\"danger\\\"\\n                      >Awaiting Processing...</ion-button\\n                    >\\n                    <ion-button\\n                      *ngIf=\\\"item.processed && !vci_state\\\"\\n                      color=\\\"success\\\"\\n                      >Processed&nbsp;{{\\n                        getdate(item.processed_date)\\n                      }}</ion-button\\n                    >\\n                    <ion-button\\n                      color=\\\"warning\\\"\\n                      *ngIf=\\\"item.processed && !vci_state\\\"\\n                      (click)=\\\"downloadFile(item.file_url)\\\"\\n                      >Download VCI File</ion-button\\n                    >\\n\\n                    <ion-button color=\\\"warning\\\" *ngIf=\\\"vci_state\\\">{{\\n                      item.state\\n                    }}</ion-button>\\n                  </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div></ion-content\\n>\\n\";"],"sourceRoot":"webpack:///"}